#!/bin/bash
#

# ------------------------------------------------------------------------------
# preliminary to any action
# ------------------------------------------------------------------------------
# - get path to scripts (normalised)
if [ -z "${SCRIPTDIR}" ] ; then
    SCRIPTDIR=`dirname $0`
    SCRIPTDIR="`cd ${SCRIPTDIR};pwd`"
    export SCRIPTDIR=`dirname ${SCRIPTDIR}`
fi
# ------------------------------------------------------------------------------

source ${SCRIPTDIR}/bash/dot_env
if test "$BNL" = ""
then

#MACRO mymess 0 Something up!! run_bnl expects BNL $BNL
  sixdeskmesslevel=0
  sixdeskmess -1 "Something up!! run_bnl expects BNL $BNL"
#MACRO mymess
 to be set
fi
dir16=$sixtrack_input

#MACRO mymess 0 Using sixtrack_input $dir16
sixdeskmesslevel=0
sixdeskmess -1 "Using sixtrack_input $dir16"
#MACRO mymess

if test ! -d "$dir16" 
then

#MACRO mymess 0 The directory $dir16 does not exist!!!
  sixdeskmesslevel=0
  sixdeskmess -1 "The directory $dir16 does not exist!!!"
#MACRO mymess
 

#MACRO myexit 1
  sixdeskexitparam=1
  sixdeskexit
#MACRO myexit

fi

#MACRO mylock $sixdeskstudy
sixdesklockdir=$sixdeskstudy
sixdesklock
#MACRO mylock

mkdir -p $sixdeskjobs_logs

#MACRO mylock $sixdeskjobs_logs
###sixdesklockdir=$sixdeskjobs_logs
###sixdesklock
#MACRO mylock


#MACRO mymess 0 Using $sixdeskjobs_logs locked
###sixdeskmesslevel=0
### sixdeskmess -1 "Using $sixdeskjobs_logs locked"
#MACRO mymess

#
tree=$sixdesktrack
#
# work out platform dependent stuff...
#qpref="undef"
#if test "$OS" = "OSF1"
#then
    qpref=""
#fi
#if test "$OS" = "Linux"
#then
#    qpref=""
#fi
#if test "$qpref" = "undef"
#then

#MACRO mymess 0 The OS $OS is not currently supported
#  sixdeskmesslevel=0
#  sixdeskmess -1 "The OS $OS is not currently supported"
#  sixdeskmess
#MACRO mymess


#MACRO myunlock $sixdeskjobs_logs
  ###sixdesklockdir=$sixdeskjobs_logs
  ###sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
#  sixdesklockdir=$sixdeskstudy
#  sixdeskunlock
#MACRO myunlock


#MACRO myexit 3
#  sixdeskexitparam=3
#  sixdeskexit
#MACRO myexit

#fi

#MACRO mymess 2 Main loop (long) for Study $LHCDescrip, Seeds $bnlseeds to $bnlseede
sixdeskmesslevel=2
sixdeskmess -1 "Main loop (long) for Study $LHCDescrip, Seeds $bnlseeds to $bnlseede"
#MACRO mymess

bnlseed=$bnlseeds
while test "$bnlseed" -le "$bnlseede"
do
  dir16=$sixtrack_input/$bnlseed

#MACRO mymess 2 Using sixtrack_input $dir16
  sixdeskmesslevel=2
  sixdeskmess -1 "Using sixtrack_input $dir16"
#MACRO mymess

  if test ! -d "$dir16" 
  then

#MACRO mymess 0 The directory $dir16 does not exist!!!
    sixdeskmesslevel=0
    sixdeskmess -1 "The directory $dir16 does not exist!!!"
#MACRO mymess
 

#MACRO myunlock $sixdeskjobs_logs
    ###sixdesklockdir=$sixdeskjobs_logs
    ###sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
    sixdesklockdir=$sixdeskstudy
    sixdeskunlock
#MACRO myunlock


#MACRO myexit 1
    sixdeskexitparam=1
    sixdeskexit
#MACRO myexit

  fi
  if test ! -s "$dir16/fort.3.mother"
  then

#MACRO mymess 0 There is NO fort.3.mother in $dir16
    sixdeskmesslevel=0
    sixdeskmess -1 "There is NO fort.3.mother in $dir16"
#MACRO mymess


#MACRO myunlock $sixdeskjobs_logs
    ###sixdesklockdir=$sixdeskjobs_logs
    ###sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
    sixdesklockdir=$sixdeskstudy
    sixdeskunlock
#MACRO myunlock


#MACRO myexit 4
    sixdeskexitparam=4
    sixdeskexit
#MACRO myexit

  fi
  cp $dir16/fort.3.mother $sixdeskjobs_logs
  bnlsample=$bnlsamples
  while test "$bnlsample" -le "$bnlsamplee "
  do
    bnlpair1=1
    while test "$bnlpair1" -lt "$bnlpairs"
    do
      bnlpair2=`expr $bnlpair1 + $bnlperjob`
      bnlpair2=`expr $bnlpair2 - 1`
      bnlpair=$bnlpair1"_"$bnlpair2
      bnlperjob2=`expr $bnlperjob \* 2`
      bnlpair1=`expr $bnlpair1 + $bnlperjob`
      Runnam=$LHCDesName"%"$bnlseed"%"$bnlsample"%"$bnlpair"%"$bnlturnse
      Rundir=$LHCDesName/$bnlseed/$bnlsample/$bnlpair/$bnlturnse

#MACRO mymess 1 Runnam/Rundir $Runnam $Rundir
      sixdeskmesslevel=1
      sixdeskmess -1 "Runnam/Rundir $Runnam $Rundir"
#MACRO mymess


#MACRO mymess 1 $LHCDesName $bnlseed $bnlsample $bnlpair $bnlturnse
      sixdeskmesslevel=1
      sixdeskmess -1 "$LHCDesName $bnlseed $bnlsample $bnlpair $bnlturnse"
#MACRO mymess

      if test ! -d "$tree"/"$Rundir"
      then

#MACRO mymess 0 $Rundir does NOT exist!!!
        sixdeskmesslevel=0
        sixdeskmess -1 "$Rundir does NOT exist!!!"
#MACRO mymess


#MACRO mymess 0 Have you run prepare_bnl for the seed(s), sample(s), etc???
        sixdeskmesslevel=0
        sixdeskmess -1 "Have you run prepare_bnl for the seed(s), sample(s), etc???"
#MACRO mymess


#MACRO myunlock $sixdeskjobs_logs
        ###sixdesklockdir=$sixdeskjobs_logs
        ###sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
        sixdesklockdir=$sixdeskstudy
        sixdeskunlock
#MACRO myunlock


#MACRO myexit 5
        sixdeskexitparam=5
        sixdeskexit
#MACRO myexit

      fi
      if test ! -s $tree"/"$Rundir"/"$sixdeskbnlin".gz"
      then

#MACRO mymess 0 $Rundir/$sixdeskbnlin
        sixdeskmesslevel=0
        sixdeskmess -1 "$Rundir/$sixdeskbnlin"
#MACRO mymess
".gz (beambeamdist.dat) does NOT exist!!!"

#MACRO mymess 0 Have you run prepare_bnl for the seed(s), sample(s), etc???
        sixdeskmesslevel=0
        sixdeskmess -1 "Have you run prepare_bnl for the seed(s), sample(s), etc???"
#MACRO mymess


#MACRO myunlock $sixdeskjobs_logs
        ###sixdesklockdir=$sixdeskjobs_logs
        ###sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
        sixdesklockdir=$sixdeskstudy
        sixdeskunlock
#MACRO myunlock


#MACRO myexit 6
        sixdeskexitparam=6
        sixdeskexit
#MACRO myexit

      fi
      #setup all the input files 
      #($sixdeskbnlin aka beambeamdist.dat already set by prepare_bnl)

#MACRO mymess 1 fort.3 setup $Runnam
      sixdeskmesslevel=1
      sixdeskmess -1 "fort.3 setup $Runnam"
#MACRO mymess

      sed -e 's/%napx%/'$bnlperjob'/g' \
          -e 's/%bnlturns%/'$bnlturns'/g' \
          -e 's/%bnlwrite%/'$bnlwrite'/g' \
          -e 's/%writebinl/'$writebinl'/g' \
          -e 's/%runnam%/'$Runnam'/g' \
      $sixdeskjobs_logs/fort.3.mother > $sixdeskjobs_logs/fort.3
      if [ -a "$dir16"/fort.2.gz ]
      then
        ln -sf "$dir16"/fort.2.gz  "$tree"/"$Rundir"/fort.2.gz
      else

#MACRO mymess 0 No SIXTRACK geometry file (fort.2): Run stopped
        sixdeskmesslevel=0
        sixdeskmess -1 "No SIXTRACK geometry file (fort.2): Run stopped"
#MACRO mymess


#MACRO myunlock $sixdeskjobs_logs
        sixdesklockdir=$sixdeskjobs_logs
        sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
        sixdesklockdir=$sixdeskstudy
        sixdeskunlock
#MACRO myunlock


#MACRO myexit 7
        sixdeskexitparam=7
        sixdeskexit
#MACRO myexit

      fi
      if [ -a $sixdeskjobs_logs/fort.3 ]
      then
        gzip -cfq  $sixdeskjobs_logs/fort.3 > "$tree"/"$Rundir"/fort.3.gz
      else

#MACRO mymess 0 No SIXTRACK control file (fort.3): Run stopped
        sixdeskmesslevel=0
        sixdeskmess -1 "No SIXTRACK control file (fort.3): Run stopped"
#MACRO mymess


#MACRO myunlock $sixdeskjobs_logs
        sixdesklockdir=$sixdeskjobs_logs
        sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
        sixdesklockdir=$sixdeskstudy
        sixdeskunlock
#MACRO myunlock


#MACRO myexit 7
        sixdeskexitparam=7
        sixdeskexit
#MACRO myexit

      fi
      if [ -a "$dir16"/fort.8.gz ]
      then
        ln -sf "$dir16"/fort.8.gz  "$tree"/"$Rundir"/fort.8.gz
      else

#MACRO mymess 0 No SIXTRACK misalignment file (fort.8): dummy file created
        sixdeskmesslevel=0
        sixdeskmess -1 "No SIXTRACK misalignment file (fort.8): dummy file created"
#MACRO mymess

        touch "$tree"/"$Rundir"/fort.8
        gzip -fq "$tree"/"$Rundir"/fort.8
      fi
      if [ -a "$dir16"/fort.16.gz ]
      then
        ln -sf "$dir16"/fort.16.gz  "$tree"/"$Rundir"/fort.16.gz
      else

#MACRO mymess 0 No SIXTRACK error file (fort.16): dummy file created
        sixdeskmesslevel=0
        sixdeskmess -1 "No SIXTRACK error file (fort.16): dummy file created"
#MACRO mymess

        touch "$tree"/"$Rundir"/fort.16
        gzip -fq "$tree"/"$Rundir"/fort.16
      fi
      #start LSF job for long run
      if test "$sixdeskplatform" = "lsf"
      then
        sed -e 's?SIXJOBNAME?'$Runnam'?g' \
            -e 's?SIXJOBDIR?'$Rundir'?g' \
            -e 's?SIXTRACKDIR?'$sixdesktrack'?g' \
            -e 's?SIXTRACKBNLEXE?'$SIXTRACKBNLEXE'?g' \
            -e 's?SIXBNLIN?'$sixdeskbnlin'?g' \
            -e 's?SIXCASTOR?'$sixdeskcastor'?g' \
            -e 's?SIXJUNKTMP?'$sixdeskjobs_logs'?g' ${SCRIPTDIR}/templates/lsf/bnl.sh > \
                $sixdeskjobs_logs/"$Runnam".sh
        chmod 755 $sixdeskjobs_logs/"$Runnam".sh
        sixdeskRunnam="$Runnam"
        sixdeskRundir="$Rundir"
        source ${SCRIPTDIR}/bash/dot_bsub $Runnam $Rundir
      elif test "$sixdeskplatform" = "cpss"
      then
        # The 3rd param 0 means only if not submitted already
        sixdeskRunnam="$Runnam"
        sixdeskRundir="$Rundir"
        source ${SCRIPTDIR}/bash/dot_task
      elif test "$sixdeskplatform" = "grid"
      then
        # Create $Runnam.grid in $sixdeskwork/$Runnam

#MACRO mymess 0 Running on GRID not yet implemented!!!
        sixdeskmesslevel=0
        sixdeskmess -1 "Running on GRID not yet implemented!!!"
#MACRO mymess


#MACRO myunlock $sixdeskjobs_logs
        sixdesklockdir=$sixdeskjobs_logs
        sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
        sixdesklockdir=$sixdeskstudy
        sixdeskunlock
#MACRO myunlock


#MACRO myexit 9
        sixdeskexitparam=9
        sixdeskexit
#MACRO myexit

      elif test "$sixdeskplatform" = "boinc"
      then
        # The 3rd param 0 means only if not submitted already
        sixdeskRunnam="$Runnam"
        sixdeskRundir="$Rundir"
        source ${SCRIPTDIR}/bash/dot_boinc
      else
        # Should be impossible

#MACRO mymess 0 You have not selected a platform CPSS, LSF, BOINC or GRID!!!
        sixdeskmesslevel=0
        sixdeskmess -1 "You have not selected a platform CPSS, LSF, BOINC or GRID!!!"
#MACRO mymess


#MACRO myunlock $sixdeskjobs_logs
        sixdesklockdir=$sixdeskjobs_logs
        sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
        sixdesklockdir=$sixdeskstudy
        sixdeskunlock
#MACRO myunlock


#MACRO myexit 10
        sixdeskexitparam=10
        sixdeskexit
#MACRO myexit

      fi
    done
    bnlsample=`expr $bnlsample + 1`
  done
  bnlseed=`expr $bnlseed + 1`
done

#MACRO myunlock $sixdeskjobs_logs
###sixdesklockdir=$sixdeskjobs_logs
###sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
sixdesklockdir=$sixdeskstudy
sixdeskunlock
#MACRO myunlock


#MACRO myexit 0
sixdeskexitparam=0
sixdeskexit
#MACRO myexit

