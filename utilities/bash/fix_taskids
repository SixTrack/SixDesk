#!/bin/bash
#

# ------------------------------------------------------------------------------
# preliminary to any action
# ------------------------------------------------------------------------------
# - get path to scripts (normalised)
if [ -z "${SCRIPTDIR}" ] ; then
    SCRIPTDIR=`dirname $0`
    SCRIPTDIR="`cd ${SCRIPTDIR};pwd`"
    export SCRIPTDIR=`dirname ${SCRIPTDIR}`
fi
# ------------------------------------------------------------------------------

source ${SCRIPTDIR}/bash/dot_env

dir16=$sixtrack_input

#MACRO mymess 2 Using sixtrack_input $dir16
sixdeskmesslevel=2
sixdeskmess -1 "Using sixtrack_input $dir16"
#MACRO mymess

if test ! -d "$dir16" 
then

#MACRO mymess 1 The directory $dir16 does not exist!!!
  sixdeskmesslevel=1
  sixdeskmess -1 "The directory $dir16 does not exist!!!"
#MACRO mymess
 

#MACRO myexit 1
  sixdeskexitparam=1
  sixdeskexit
#MACRO myexit

fi
${SCRIPTDIR}/bash/mad6t.sh -c
if test $? -ne 0
then

#MACRO mymess 1 sixtrack_input appears incomplete!!!
  sixdeskmesslevel=1
  sixdeskmess -1 "sixtrack_input appears incomplete!!!"
#MACRO mymess


#MACRO myexit 2
  sixdeskexitparam=2
  sixdeskexit
#MACRO myexit

fi

#MACRO mylock $sixdeskstudy
sixdesklockdir=$sixdeskstudy
sixdesklock
#MACRO mylock

mkdir -p $sixdeskjobs_logs

#MACRO mylock $sixdeskjobs_logs
###sixdesklockdir=$sixdeskjobs_logs
###sixdesklock
#MACRO mylock


#MACRO mymess 2 Using $sixdeskjobs_logs
sixdeskmesslevel=2
sixdeskmess -1 "Using $sixdeskjobs_logs"
#MACRO mymess

#
tree=$sixdesktrack
if test ! -d "$tree/$LHCDesHome"
then
  mkdir -p $tree/$LHCDesHome
fi
#
if [ ! -s "$tree/$LHCDesHome/general_input" ];then
  echo "general_input is missing!!!"

#MACRO myexit 1
  sixdeskexitparam=1
  sixdeskexit
#MACRO myexit

fi
#
Ampl=$ns1l"_"$ns2l
#
# Amplitude range
#
if [ $long -eq 1 ] ;then
  if [ -z "$Ampl" ] ;then

#MACRO mymess 0 Define Ampl for longterm tracking ...
    sixdeskmesslevel=0
    sixdeskmess -1 "Define Ampl for longterm tracking ..."
#MACRO mymess


#MACRO myunlock $sixdeskstudy
    sixdesklockdir=$sixdeskstudy
    sixdeskunlock
#MACRO myunlock


#MACRO myexit 2
    sixdeskexitparam=2
    sixdeskexit
#MACRO myexit

  fi
fi
#
# main loop
#
if test $long -eq 1
then

#MACRO mymess 0 Main loop (long) for Study $LHCDescrip, Seeds $ista to $iend
  sixdeskmesslevel=0
  sixdeskmess -1 "Main loop (long) for Study $LHCDescrip, Seeds $ista to $iend"
#MACRO mymess


#MACRO mytunes
  sixdesktunes
#MACRO mytunes


#MACRO mymess 0 Amplitudes $ns1l to $ns2l by $nsincl, Angles $kinil, $kendl, $kmaxl by $kstep
  sixdeskmesslevel=0
  sixdeskmess -1 "Amplitudes $ns1l to $ns2l by $nsincl, Angles $kinil, $kendl, $kmaxl by $kstep"
#MACRO mymess

elif test $short -eq 1 -o $da -eq 1
then

#MACRO mymess 0 Main loop (short/da) for Study $LHCDescrip, Seeds $ista to $iend
  sixdeskmesslevel=0
  sixdeskmess -1 "Main loop (short/da) for Study $LHCDescrip, Seeds $ista to $iend"
#MACRO mymess


#MACRO mytunes
  sixdesktunes
#MACRO mytunes


#MACRO mymess 0 Amplitudes $ns1s to $ns2s by $nss, Angles $kini, $kend, $kmax by $kstep
  sixdeskmesslevel=0
  sixdeskmess -1 "Amplitudes $ns1s to $ns2s by $nss, Angles $kini, $kend, $kmax by $kstep"
#MACRO mymess

fi
i=$ista
while test "$i" -le "$iend" 
do
  # And now we have a new loop over the tunescans
  itunexx=$itunex
  ituneyy=$ituney
  while test "$itunexx" -le "$itunex1" -a "$ituneyy" -le "$ituney1"
  do
    # returns sixdesktunes and tunexx/tuneyy, computed from itunexx/ituneyy,
    #    using xlen/ylen
    sixdeskPrepareTunes

#MACRO mymess 0 Tunescan $sixdesktunes
    sixdeskmesslevel=0
    sixdeskmess -1 "Tunescan $sixdesktunes"
#MACRO mymess

    # compute inttunexx and inttuneyy

#MACRO myinttunes
    sixdeskinttunes
#MACRO myinttunes

    #
    if [ ! -d "$tree/$LHCDesHome/$i/simul/$sixdesktunes" ]; then  
       echo "Tunes directory is missing!!!"

#MACRO myexit 2
       sixdeskexitparam=2
       sixdeskexit
#MACRO myexit

    fi  
    # Check betavalues
    nobetas=`cat $tree/$LHCDesHome/$i/simul/$sixdesktunes/betavalues | wc -w`
    if test "$nobetas" -ne 14
    then 

#MACRO mymess 0 betavalues has only $nobetas words!!! Should be 14!
      sixdeskmesslevel=0
      sixdeskmess -1 "betavalues has only $nobetas words!!! Should be 14!"
#MACRO mymess

      rm -f $tree/$LHCDesHome/$i/simul/$sixdesktunes/betavalues

#MACRO myunlock $sixdeskstudy
      sixdesklockdir=$sixdeskstudy
      sixdeskunlock
#MACRO myunlock


#MACRO myexit 98
      sixdeskexitparam=98
      sixdeskexit
#MACRO myexit

    fi
    #
    #run for longterm
    #
    if [ "$long" -eq 1 ] ;then
    # Now we have the new code to do integer arithmetic on amplitudes

#MACRO myamps
      sixdeskamps
#MACRO myamps

      while test "$ampstart" -lt "$ampfinish"
      do
        fampstart=`gawk 'END{fnn='$ampstart'/1000.;printf ("%.3f\n",fnn)}' /dev/null`
        fampstart=`echo $fampstart | sed -e's/0*$//'`
        fampstart=`echo $fampstart | sed -e's/\.$//'`
        ampend=`expr "$ampstart" + "$ampincl"`
        fampend=`gawk 'END{fnn='$ampend'/1000.;printf ("%.3f\n",fnn)}' /dev/null`
        fampend=`echo $fampend | sed -e's/0*$//'`
        fampend=`echo $fampend | sed -e's/\.$//'`
        Ampl="$fampstart"_"$fampend" 

#MACRO mymess 0 Loop over amplitudes: $Ampl $ns1l $ns2l $nsincl
        sixdeskmesslevel=0
        sixdeskmess -1 "Loop over amplitudes: $Ampl $ns1l $ns2l $nsincl"
#MACRO mymess


#MACRO mymess 0 $ampstart $ampfinish $ampincl $fampstart $fampend
        sixdeskmesslevel=0
        sixdeskmess -1 "$ampstart $ampfinish $ampincl $fampstart $fampend"
#MACRO mymess

        k=$kinil
        AngleStep=`gawk 'END{a=90/('$kmaxl'+1);print a}' /dev/null`
        while test "$k" -le "$kendl"
        do
          Angle=`gawk 'END{a='$AngleStep'*'$k';print a}' /dev/null`
          kang=`gawk 'END{kang='$k'/('$kmaxl'+1);print kang}' /dev/null`
          echo $k, $kinil, $kmaxl, $kendl, $Angle, $AngleStep
          ###Rundir=$LHCDesHome/$i/simul/$sixdesktunes/$Ampl/e$turnsle/$Angle
          Runnam=$LHCDesName"%"${i}"%s%"$sixdesktunes"%"$Ampl"%"$turnsle"%"$Angle

#MACRO myrundir $Runnam Rundir
          runnamename=$Runnam
          sixdeskrundir
          Rundir=$rundirname
#MACRO myrundir
 
          #
          if [ ! -d "$tree"/"$Rundir" ] ;then
            echo "$Rundir is MISSING!!!"

#MACRO myexit 3
            sixdeskexitparam=3
            sixdeskexit
#MACRO myexit

          fi
          #
          if [ ! -e "$dir16"/fort.2_"$i".gz ] ;then

#MACRO mymess 0 No SIXTRACK geometry file (fort.2): Run stopped
            sixdeskmesslevel=0
            sixdeskmess -1 "No SIXTRACK geometry file (fort.2): Run stopped"
#MACRO mymess


#MACRO myunlock $sixdeskjobs_logs
            ###sixdesklockdir=$sixdeskjobs_logs
            ###sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
            sixdesklockdir=$sixdeskstudy
            sixdeskunlock
#MACRO myunlock


#MACRO myexit 6
            sixdeskexitparam=6
            sixdeskexit
#MACRO myexit

          fi
          if [ ! -e $sixdeskjobs_logs/fort.3 ] ;then

#MACRO mymess 0 No SIXTRACK control file (fort.3): Run stopped
            sixdeskmesslevel=0
            sixdeskmess -1 "No SIXTRACK control file (fort.3): Run stopped"
#MACRO mymess


#MACRO myunlock $sixdeskjobs_logs
            ###sixdesklockdir=$sixdeskjobs_logs
            ###sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
            sixdesklockdir=$sixdeskstudy
            sixdeskunlock
#MACRO myunlock


#MACRO myexit 7
            sixdeskexitparam=7
            sixdeskexit
#MACRO myexit

          fi
          if [ ! -e "$dir16"/fort.8_"$i".gz ] ;then

#MACRO mymess 0 No SIXTRACK misalignment file (fort.8): dummy file created
            sixdeskmesslevel=0
            sixdeskmess -1 "No SIXTRACK misalignment file (fort.8): dummy file created"
#MACRO mymess

            touch "$tree"/"$Rundir"/fort.8
            gzip "$tree"/"$Rundir"/fort.8
          fi
          if [ ! -e "$dir16"/fort.16_"$i".gz ] ;then

#MACRO mymess 0 No SIXTRACK error file (fort.16): dummy file created
            sixdeskmesslevel=0
            sixdeskmess -1 "No SIXTRACK error file (fort.16): dummy file created"
#MACRO mymess

            touch "$tree"/"$Rundir"/fort.16
            gzip "$tree"/"$Rundir"/fort.16
          fi
          #
# Now try the FIX!
          if test ! -d $tree/$Rundir 
          then
            echo "Something really bad, $Rundir does NOT exist!!!"

#MACRO myexit 99
            sixdeskexitparam=99
            sixdeskexit
#MACRO myexit

          fi
# Now add the taskid if missing
          grep "$Runnam " $sixdeskwork/taskids
          if test $? -ne 0
          then
            echo "$Runnam is MISSING"
            echo "$Runnam " >> $sixdeskwork/taskids
          fi  
          k=`expr $k + $kstep`
        done
        # end of loop over angles
        ampstart=`expr $ampstart + $ampincl`
      done
      # end of loop over amplitudes
    fi
    itunexx=`expr $itunexx + $ideltax`
    ituneyy=`expr $ituneyy + $ideltay`
  done
  # end of loop over tunescans
  let i=i+1
done
#
# end main loop

#MACRO myunlock $sixdeskjobs_logs
###sixdesklockdir=$sixdeskjobs_logs
###sixdeskunlock
#MACRO myunlock


#MACRO myunlock $sixdeskstudy
sixdesklockdir=$sixdeskstudy
sixdeskunlock
#MACRO myunlock


#MACRO mymess 0 Completed normally
sixdeskmesslevel=0
sixdeskmess -1 "Completed normally"
#MACRO mymess


#MACRO myexit 0
sixdeskexitparam=0
sixdeskexit
#MACRO myexit

