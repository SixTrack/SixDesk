#!/bin/bash
#
# Delete all failed Results in sixdeskerror.log (by TaskId)
#

# ------------------------------------------------------------------------------
# preliminary to any action
# ------------------------------------------------------------------------------
# - get path to calling script and normalise it
SCRIPTDIR=`dirname $0`
SCRIPTDIR="`cd "${SCRIPTDIR}";pwd`"
# ------------------------------------------------------------------------------

source ${SCIRPTDIR}/dot_env

#MACRO mylock $sixdeskstudy
sixdesklockdir=$sixdeskstudy
sixdesklock
#MACRO mylock

if test $sixdeskplatform = "lsf"
then
  echo "This command is not available for LSF!"

#MACRO myexit 1
  sixdeskexitparam=1
  sixdeskexit
#MACRO myexit

fi
if test $sixdeskplatform = "cpss"
then
  tgid=`cat $sixdeskjobs/TaskGroupId`
  mytgid=`echo $tgid | sed -e 's/TaskGroupID: *//'`
fi
while read line
do
  taskid=`echo $line | cut -d" " -f1`
  Runnam=`echo $line | cut -d" " -f2`

#MACRO myrundir $Runnam Rundir
  runnamename=$Runnam
  sixdeskrundir
  Rundir=$rundirname
#MACRO myrundir

  echo "$taskid $Runnam $Rundir"

#MACRO mymess 2 Deleting the result for task $taskid from the server
  sixdeskmesslevel=2
  sixdeskmess="Deleting the result for task $taskid from the server"
  sixdeskmess
#MACRO mymess

  if test $sixdeskplatform = "cpss"
  then
    ntaskid=`echo $taskid | sed -e's/cpss//'`

#MACRO mymktmp tmp 
    sixdesktmpname=tmp
    sixdesktmpdirarg=
    sixdeskmktmp
    tmp=$sixdesktmp
#MACRO mymktmp

    perl $sixdeskpath/Bin/confirmResultDownload.pl $ntaskid > $tmp 2>&1
    stat=$?
    if test $stat -ne 0
    then

#MACRO mymess 1 confirmResultDownload failed!!! `cat $tmp`
      sixdeskmesslevel=1
      sixdeskmess="confirmResultDownload failed!!! `cat $tmp`"
      sixdeskmess
#MACRO mymess

    fi
    rm $tmp
    mymess="Deleting task $taskid in $mytgid from the server"
    perl $sixdeskpath/Bin/deleteTask.pl $ntaskid $mytgid > $tmp 2>&1
    stat=$? 
    if test $stat -ne 0
    then
      mymess="deleteTask failed!!! `cat $tmp`"
    fi
    rm $tmp
  elif test $sixdeskplatform = "boinc"
  then
    rm $sixdeskboincdir/results/$Runnam"_1_sixvf_"$taskid  
  fi
done < sixdeskerror.log

#MACRO myunlock $sixdeskstudy
sixdesklockdir=$sixdeskstudy
sixdeskunlock
#MACRO myunlock


#MACRO myexit 0
sixdeskexitparam=0
sixdeskexit
#MACRO myexit

