#!/bin/ksh
#
# $file $dir1 $iplot $short $long $kvar $sixdesktrack/$LHCDesHome
#basedir is set in run_post and we also inherit sixdeskenv
bindir=$sixdeskhome/bin
zero=0
elhc=`awk '{print $1}' $7/general_input`
einj=`awk '{print $2}' $7/general_input`
cd plot
if [ -n "$2" -a "$4" -eq 1 ] ;then
  MomDir="$2/../../../../../momen/$sixdesktunes/__/e0/0"
  echo $MomDir/fort.10.gz
  if [ -s "$MomDir/fort.10.gz" ] ;then
    gzip -cd $MomDir/fort.10.gz > fort.10
    qs=`awk  'FNR == 1 {print int(10000000*$25)}' fort.10 `
    if [ "$qs" -lt "$zero" -o "$qs" -gt "$zero" ] 
      then iqs=6d
      else iqs=4d
    fi
    extra1=`awk -F. 'FNR == 1 {print $1}' fort.10`
    File=$MomDir
    Filename=${File##$basedir/}
    echo "set title \"$Filename Chromaticity ("$iqs"),  - $extra1 Turn\" " > tunedp  
    cat inc/tunedp.save >> tunedp
    echo "$elhc $einj" | $bindir/readplotb
    gnuplot tunedp >  tunedp.eps
    rm -rf fort.*
  fi
  #
  i=1
  while [ -s "$2/../.$i/fort.10.gz" ] ;do
      echo $2/../.$i
      gzip -cd $2/../.$i/fort.10.gz > fort.10
      if [ i -eq 1 ] ;then
	qs=`awk  'FNR == 1 {print int(10000000*$25)}' fort.10 `
	if [ "$qs" -lt "$zero" -o "$qs" -gt "$zero" ] 
	  then iqs=6d
	  else iqs=4d
	fi
      fi
      extra2=`awk -F. 'FNR == 1 {print $1}' fort.10`
      $bindir/readdp
      j=11
      k=1
      while [ -s "fort.$j" ]
      do
	if [ ! -d "$j" ] ;then
	  mkdir $j
	fi
	mv fort.$j $j/fort.10
	cd $j
	del[$k]=`awk  'FNR == 1 {print int(1000000*$9)}' fort.10 `
	echo "$elhc $einj" | $bindir/readplotb
	if [ -s fort.7 ] ;then
	  echo "" >> fort.7
	fi
	cat fort.20 >> fort.7
	if [ -s fort.8 ] ;then
	  echo "" >> fort.8
	fi
	cat fort.21 >> fort.8
	cat fort.25 >> fort.9
	cp fort.20 forta."$i"
	cp fort.21 fortb."$i"
	cd ..
	((j=j+1))
	((k=k+1))
      done
      ((i=i+1))
  done
  if [ i -gt 1 ] ;then 
    let iend=i-1
    rm -rf fort.*
    i=1
    rm -rf fort1.11
    while [ -d "1$i" ]
    do
      cp 1$i/fort.9 fort.10
      $bindir/readweb
      cat fort.11 >> fort"$i".11
      cat fort.11 >> forts.11
      echo "" >> forts.11
      ((i=i+1))
    done
    ((j=j-1))
    if [ "$j" -eq 11 ] ;then 
      plotweb="plot \"fort1.11\" using 1:2 title \"delta="${del[1]}"e-6\" with linespoints"
    elif [ "$j" -eq 13 ] ;then
      plotweb="plot \"fort1.11\" using 1:2 title \"delta="${del[1]}"e-6\" with linespoints 1 1, \"fort2.11\" using 1:2 title \"delta="${del[2]}"e-6\" with linespoints 2 2, \"fort3.11\" using 1:2 title \"delta="${del[3]}"e-6\" with linespoints 3 3"
    else plotweb="plot \"forts.11\" using 1:2 with linespoints"
    fi
    Filename=${File##$basedir/}
    echo "set title \"$Filename, Tunefootprint ("$iqs"), $extra2 Turns\" " > web  
    cat inc/web.save >> web
    if [ "$j" -ne 11 -a "$j" -ne 13 ] 
      then echo "set nokey" >> web
    fi
    echo "$plotweb" >> web
    gnuplot web >  web.eps
    ((i = i / 2 + 10 ))
    ((j = i - 10))
    File="$2/../.$j"
    echo "set title \"$Filename, H-Detuning ("${del[$j]}e-6", "$iqs"), $extra2 Turns\" " > detuning  
    cat inc/detuningh.save >> detuning
    if [ iend -eq 5 ] ;then
      k=1
      while [ k -le 5 ] 
      do   
        cp $i/forta."$k" .
        cp $i/fortb."$k" .
        ((k=k+1))
      done
      echo "plot \"forta.1\" using 1:2 title \"15 Degree\" with linespoints 1 1, \"forta.2\" using 1:2 title \"30 Degree\" with linespoints 2 2, \"forta.3\" using 1:2 title \"45 Degree\" with linespoints 3 3, \"forta.4\" using 1:2 title \"60 Degree\" with linespoints 4 4, \"forta.5\" using 1:2 title \"75 Degree\" with linespoints 5 5 " >> detuning 
    else
      echo "plot \"fort.20\" using 1:2 with linespoints" >> detuning
    fi
    cp $i/fort.7 fort.20
    gnuplot detuning >  detuningh.eps
    rm -rf detuning
    echo "set title \"$Filename, V-Detuning ("${del[$j]}e-6", "$iqs"), $extra2 Turns\" " > detuning  
    cat inc/detuningv.save >> detuning
    if [ iend -eq 5 ] ;then
      echo "plot \"fortb.1\" using 1:2 title \"15 Degree\" with linespoints 1 1, \"fortb.2\" using 1:2 title \"30 Degree\" with linespoints 2 2, \"fortb.3\" using 1:2 title \"45 Degree\" with linespoints 3 3, \"fortb.4\" using 1:2 title \"60 Degree\" with linespoints 4 4, \"fortb.5\" using 1:2 title \"75 Degree\" with linespoints 5 5 " >> detuning 
    else
      echo "plot \"fort.20\" using 1:2 with linespoints" >> detuning
    fi
    cp $i/fort.8 fort.20
    gnuplot detuning >  detuningv.eps
    i=11
    while [ -d "$i" ]
    do
      rm -r $i
      ((i=i+1))
    done
  fi
fi
	
if [ ! -s detuning.eps -a "$4" -ne 0 ] ;then
  echo "set title \"$Filename   - $extra Turns\" " > detuning  
  cat inc/detuning.save >> detuning
fi

File=$1
Filename=${File##$sixdesktrack/}
Fileps=${Filename%%/fort.10.gz}
if [ -s $1 -a "$5" -eq 1 ] ;then
  gzip -cd $1 > fort.10
  qs=`awk  'FNR == 1 {print int(10000000*$25)}' fort.10 `
  if [ "$qs" -lt "$zero" -o "$qs" -gt "$zero" ] 
    then iqs=6d
    else iqs=4d
  fi
  extra=`awk -F. 'FNR == 1 {print $1}' fort.10`
  pwd
#  echo $File2
  echo "set title \"$Filename Slope ("$iqs"), $extra Turns\" " > maxslope  
  cat inc/maxslope.save >> maxslope
  echo "set title \"$Filename Distance ("$iqs"), $extra Turns\" " > distance  
  cat inc/distance.save >> distance
  echo "set title \"$Filename Survival ("$iqs"), $extra Turns\" " > survival  
  cat inc/survival.save >> survival
  echo "set title \"$Filename Smear ("$iqs"), $extra Turns\" " > smear
  cat inc/smear.save >> smear
  rm -rf fort.29
  echo "set title \"$Filename Average Amplitude ("$iqs"), $extra Turns\" " > averem
  cat inc/averem.save >> averem
  echo "$elhc $einj" | $bindir/readplotb
  gnuplot maxslope >  maxslope.eps
  gnuplot distance >  distance.eps
  gnuplot survival >  survival.eps
  gnuplot smear >  smear.eps
  gnuplot averem >  averem.eps
  if [ ! -s detuningh.eps -a "$4" -ne 0 ] ;then
    File="$1"
    Filename=${File##$basedir/}
    File1=${Filename%%/fort.10.gz}
    echo "set title \"$Filename, Detuning ("$iqs"), $extra2 Turns\" " > detuning  
    cat inc/detuning.save >> detuning
    echo "plot \"fort.20\" using 1:2 title \"Horizontal\" with linespoints 1 1, \"fort.21\" using 1:2 title \"Vertical\" with linespoints 2 2" > detuning 
    gnuplot detuning >  detuningh.eps
  fi
fi

# here we process for kvar = 1
###myangle=`echo $Filename | sed -e's?\([^/]*\)/\([^/]*\)/\([^/]*\)/\([^/]*\)/\([^/]*\)/\([^/]*\)/\.\([0-9][0-9]*\)/.*?\7?'`
###echo "Eric myangle: $myangle"
if [ "$6" -eq 1 ] ;then
  rm -f fort.40
  ik=1
  iktest=0
  ikend=100000
  while [ $ik -le $ikend ] ;do
    if [ -a "$2"/../."$ik"/fort.10.gz ] ;then
      echo "$2"/../."$ik"/fort.10.gz
      ((ik=ik+1))
      ((iktest=iktest+1))
    else
      ((ik=ik+ikend))
    fi
  done 
  ik=1
  rm -rf fort.27
  rm -rf fort.28
  while [ ik -le iktest ]
  do
    ang=`awk  'END{ang=90/('$iktest'+1)*'$ik';print ang}' /dev/null`
    gzip -cd "$2"/../."$ik"/fort.10.gz > fort.10
    echo "$elhc $einj" | $bindir/readplotb
    echo -n "$ang " >> fort.28
    cat fort.27 >> fort.28
    ach=`awk 'FNR==1 {print $1}' fort.11`
    al10m=`awk 'FNR==2 {print $1}' fort.11`
    al1m=`awk 'FNR==3 {print $1}' fort.11`
    al100k=`awk 'FNR==4 {print $1}' fort.11`
    al10k=`awk 'FNR==5 {print $1}' fort.11`
    al1000=`awk 'FNR==6 {print $1}' fort.11`
    amin=`awk 'FNR==7 {print $1}' fort.11`
    amax=`awk 'FNR==8 {print $1}' fort.11`
    ach1=`awk 'FNR==9 {print $1}' fort.11`
    echo "$ang" "$ach" "$al10m" "$al1m" "$al100k" "$al10k" "$al1000" "$amin" "$amax" "$ach1" >> fort.40
  # Now create all.angle for finding min.max over allseeds
    myseed=`echo $Filename | sed -e's?[^/]*/\([^/]*\).*?\1?'`
#debug    echo "myseed: $myseed"
#debug    echo "ista: $ista"
#debug    echo "iend: $iend"
#debug    echo "writebinl: $writebinl"
    myturnse=`echo $Filename | sed -e's?\([^/]*\)/\([^/]*\)/\([^/]*\)/\([^/]*\)/\([^/]*\)/\([^/]*\).*?\6?'`
#debug    echo "myturnse: $myturnse"
    #First time only
    if test "$myseed" -eq "$ista"
    then
      rm -f all.$ik
      touch all.$ik
    fi
    #Every time
    echo "$ang" "$ach" "$al10m" "$al1m" "$al100k" "$al10k" "$al1000" "$amin" "$amax" "$ach1" >> all.$ik
    ((ik=ik+1))
  done  
  # Prepare to produce only the sensible plots
  plots[0]="plot "
  plots[7]="\"fort.40\" using 1:3 title \"10 Million Turn Loss\" with linespoints 6 6,"
  plots[6]="\"fort.40\" using 1:4 title \"1 Million Turn Loss\" with linespoints 5 5,"
  plots[5]="\"fort.40\" using 1:5 title \"100'000 Turn Loss\" with linespoints 4 4,"
  plots[4]="\"fort.40\" using 1:6 title \"10'000 Turn Loss\" with linespoints 3 3,"
  plots[3]="\"fort.40\" using 1:7 title \"1000 Turn Loss\" with linespoints 2 2,"
  if [ $iktest -gt 0 ] ;then
    qs=`awk  'FNR == 1 {print int(10000000*$25)}' fort.10 `
    if [ "$qs" -lt "$zero" -o "$qs" -gt "$zero" ] 
      then iqs=6d
      else iqs=4d
    fi
    extra2=`awk -F. 'FNR == 1 {print $1}' fort.10`
    echo "set title \"$Filename, D.A. vs K ("$iqs"), $extra2 Turns\" " > kvar  
    cat inc/kvar.save >> kvar  
    allplot="${plots[0]}"
  # and add the sensible plots, maxe is from the e7, e6 field of the Filename
    maxe=`echo $myturnse | sed -e's/e//'`
    mywbin=`echo $writebinl | sed -e's/[1-9]*//'`
    wbine=`echo $mywbin |wc -c `
    ((wbine=wbine-1))
  #debug    echo "maxe: $maxe mywbin: $mywbin wbine: $wbine"
  # and always put at least one plot
    e=maxe
    while test "$e" -ge 3
    do
      if test "$e" -eq "$maxe" -o "$e" -ge "$wbine" 
      then
        allplot="$allplot ${plots[$e]}"
      fi 
      ((e=e-1))
    done 
  # and remove the trailing ","
    allplot=`echo $allplot | sed -e's/,$//'`
  #debug    echo "allplot: $allplot"
    echo "$allplot" >> kvar
    gnuplot kvar > kvar.eps
  fi
  # New code to produce a summary plot over all seeds
  # Last time only
  if test "$myseed" -eq "$iend"
  then
  # Compute maximum and minimum using all.angle files
    rm -f all.seeds
    ik=1
    mynoseeds=`wc -l < all.$ik`
    ((totalseeds=iend-ista+1))
    if test "$mynoseeds" -ne "$totalseeds"
    then
      echo "Some seeds missing, using $mynoseeds instead of $totalseeds!!!"
    fi
    while test "$ik" -le "$iktest"
    do
      awk -f inc/minmax.awk all.$ik >> all.seeds
      ((ik=ik+1))
    done
  # and try a plot  
    plots[0]="plot "
    plots[7]="\"all.seeds\" using 1:3 title \"10 Million Turn Loss\" with linespoints 6 6,"
    plots[6]="\"all.seeds\" using 1:4 title \"1 Million Turn Loss\" with linespoints 5 5,"
    plots[5]="\"all.seeds\" using 1:5 title \"100'000 Turn Loss\" with linespoints 4 4,"
    plots[4]="\"all.seeds\" using 1:6 title \"10'000 Turn Loss\" with linespoints 3 3,"
    plots[3]="\"all.seeds\" using 1:7 title \"1000 Turn Loss\" with linespoints 2 2,"
    myname=`echo $Filename | sed -e's?\([^/]*\)/\([^/]*\)/\([^/]*\)/\([^/]*\)/\([^/]*\)/\([^/]*\).*?\4/\5/\6?'`
#debug    echo "myname: $myname"
    extra2=`awk -F. 'FNR == 1 {print $1}' fort.10`
    echo "set title \"$LHCDescrip/$myname, D.A. of $mynoseeds seeds vs K ("$iqs"), $extra2 Turns\" " > all.plot
    cat inc/kvar.save >> all.plot
    allplot="${plots[0]}"
# and add the sensible plots, naxe is from the e7, e6 field of the Filename
    maxe=`echo $myturnse | sed -e's/e//'`
    mywbin=`echo $writebinl | sed -e's/[1-9]*//'`
    wbine=`echo $mywbin |wc -c`
    ((wbine=wbine-1))
#debug    echo "maxe: $maxe mywbin: $mywbin wbine: $wbine"
# and always put at least one plot
    e=maxe
    while test "$e" -ge 3
    do
      if test "$e" -eq "$maxe" -o "$e" -ge "$wbine"
      then
        allplot="$allplot ${plots[$e]}"
      fi
      ((e=e-1))
    done
# and remove the trailing ","
    allplot=`echo $allplot | sed -e's/,$//'`
#debug    echo "allplot: $allplot"
    echo "$allplot" >> all.plot
    mkdir -p $LHCDescrip
    gnuplot all.plot > $LHCDescrip/allseeds.eps
    gzip -f $LHCDescrip/allseeds.eps
    rm all*
  fi
fi
do_it=0
###if test -s tunedp.eps -o -s survival.eps -o -s kvar.eps -o -s $LHCDescrip/allseeds.eps
if test -s tunedp.eps -o -s survival.eps -o -s kvar.eps -o -s detuningh.eps
then 
  do_it=1
fi  
if [ do_it -eq 1 -a $3 -gt 0 ] ;then
  latex test > /dev/null
  dvips -q test -o test.ps
  if [ $3 -eq 2 ]
    then 
    if test "$PRINT_CMD" = ""
    then
      echo "Cannot print (iplot=2) as PRINT_CMD is undefined!!"
    else
      $PRINT_CMD test.ps
    fi
  fi
  if [ ! -d "$Fileps" ] ;then
    mkdir -p $Fileps
  fi
  mv *.eps $Fileps
  mv test.ps $Fileps
  #
  if [ -s fort.40 ] ;then
    mv fort.40 $Fileps
    mv fort.11 $Fileps
  fi
  if [ -s fort.28 ] ;then
    mv fort.28 $Fileps
  fi
# Added at Massimo's suggestion
  cp fort.15 $Fileps
  gzip -f $Fileps/fort.15
  gzip -f $Fileps/*.*ps
else
  rm -f averem.eps distance.eps kvar.eps maxslope.eps smear.eps survival.eps
fi

rm -rf fort.*
rm -rf fort*.*
rm -rf *.aux *.log *.dvi
rm -rf *~
rm -rf maxslope
rm -rf distance
rm -rf survival
rm -rf tunedp
rm -rf detuning
rm -rf smear
rm -rf averem
rm -rf web
rm -rf angf
rm -rf kvar
rm -rf *.save
