#!/bin/sh
#
# This script will submit a task 
# using the $1 sixdeskRunnam and the $2 directory sixdeskRundir
# $3=0 mean submit only if not submitted already
# $3=1 means (re-)submit anyway
# $3=2 means (re-)submit anyway even if fort.10.gz exists
# The sixdeskRundir is relative to $sixdesktrack
# It then creates or updates the taskids file to include the new taskid
# It adds a new job to the incomplete_jobs file
# The variables sixdeskRunam sixdeskRundir and sixdeskforce must
# be set before calling by . ./dot_task
# priority could be set to "high" or "Low"
sixdeskPriority="Normal"
# sixdeskOsMin="5.0", sixdeskOsMax="9.9" and sixdeskCpuSpeedMin ="100" MHz are inherited from sixdeskenv
# July 19th, 2004 added sixdeskcr and sixdeskclientv
# August 19th, 2004 added sixdeskout (fort.6 or STDOUT for sixtrackcr)
if test "$sixdeskcr" = ""
then
  sixdeskcr=0
fi
sixdeskout="fort.6"
if test "$sixdeskcr" -ne "0"
then
  sixdeskout="STDOUT" 
fi  
if test "$sixdeskclientv" = ""
then
  sixdeskclientv=1.0
fi
if test "$sixdeskOsMin" = ""
then
  sixdeskOsMin=5.0
fi
if test "$sixdeskOsMax" = ""
then
  sixdeskOsMax=9.9
fi
if test "$sixdeskCpuSpeedMin" = ""
then
  sixdeskCpuSpeedMin=100
fi
SIXDESKWHERE=$sixdesktrack/$sixdeskRundir
mymess 1 "sixdeskRunnam $sixdeskRunnam SIXDESKWHERE $SIXDESKWHERE sixdeskwork FORCE $sixdeskforce $sixdeskwork"
if test ! -s "$sixdeskstudy/TaskGroupId"
then
  . ./dot_taskgroup
fi
if test ! -s "$sixdeskstudy/TaskGroupId"
then
  mymess 0 "The file $sixdeskstudy/TaskGroupId is missing!!"
  myexit 4
fi
sixdeskTaskGroupId=`sed -e's/TaskGroupID: *//' $sixdeskstudy/TaskGroupId`
if test ! -s "$sixdeskstudy/ProgramId"
then
  mymess 0 "The file $sixdeskstudy/ProgramId is missing!!"
  myexit 4
fi
sixdeskProgramId=`sed -e's/ProgramId: *//' $sixdeskstudy/ProgramId`
mymess 0 "Using TaskGroup $sixdeskTaskGroupId and ProgramId $sixdeskProgramId"
if test ! -d $SIXDESKWHERE
then
  mymess 0 "$SIXDESKWHERE is NOT a directory!!!" 
  myexit 5
fi
sixdeskrunit="true"
if test -s $SIXDESKWHERE/fort.10.gz -a "$sixdeskforce" -lt 2
then
  mymess 1 "Task $sixdeskRunnam already completed; we will NOT re-submit"
  sixdeskrunit="false"
else
  if test "$sixdeskforce" -eq 0
  then
    ###mylock $sixdeskwork
    if test -s $sixdeskwork/taskids
    then
      grep "$sixdeskRunnam " $sixdeskwork/taskids > /dev/null 2>&1
      sixdeskstat=$?
      if test $sixdeskstat -eq 0
      then
        line=`grep "$sixdeskRunnam " $sixdeskwork/taskids`
        sixdeskoldtaskid=`echo $line | cut -d " " -f2-`
        if test "$sixdeskoldtaskid" != ""
        then
          mymess 1 "Task $sixdeskRunnam already submitted taskid(s) $sixdeskoldtaskid; skipping it"
          sixdeskrunit="false"
          # and make sure we have a JOB_NOT_YET_COMPLETED
          ###touch $SIXDESKWHERE/JOB_NOT_YET_COMPLETED
        fi
      fi 
    fi
    ###myunlock $sixdeskwork
  fi
fi
if test $sixdeskrunit = "true"
then
  mymktmp tmp
  mkdir -p $sixdeskjobs_logs/run
  # We are going to (re-)submit it
  sixdeskexists=0
  for sixdeski in 2 3 8 16
  do
    if test ! -f $SIXDESKWHERE/fort.$sixdeski.gz
    then
      mymess 0 "File $SIXDESKWHERE/fort.$sixdeski.gz does NOT exist!!!"
    else
      sixdeskexists=`expr $sixdeskexists + 1`
    fi
  done
  if test "$sixdeskexists" -ne 4
  then
    sixdeskexists=`expr 4 - $sixdeskexists`
    mymess 0 "There are $sixdeskexists input files missing!!! in $SIXDESKWHERE"
    rm -f $tmp
    myexit 6
  fi
  # Make sure we are clean (in case of a run_six or system crash)
  rm -f $sixdeskjobs_logs/run/fort.*
  for sixdeski in 2 3 8 16
  do
    cp $SIXDESKWHERE/fort.$sixdeski.gz $sixdeskjobs_logs/run
    gunzip -f $sixdeskjobs_logs/run/fort.$sixdeski.gz
  done
  sixdeskTaskName=$sixdeskRunnam
  sixdeskfileDir=$sixdeskjobs_logs/run
  gotit=""
  mytries=0
  while test "$gotit" != "OK" -a $mytries -ne 11
  do
    mytries=`expr $mytries + 1`
    echo "Perl uploadTask" "$sixdeskTaskName" "$sixdeskTaskGroupId" "$sixdeskProgramId" "$sixdeskfileDir" "$sixdeskPriority" "$sixdeskOsMin" "$sixdeskOsMax" "$sixdeskCpuSpeedMin" "$sixdeskcr" "$sixdeskclientv" "$sixdeskout"
    perl $sixdeskpath/Bin/uploadTask.pl "$sixdeskTaskName" "$sixdeskTaskGroupId" "$sixdeskProgramId" "$sixdeskfileDir" "$sixdeskPriority" "$sixdeskOsMin" "$sixdeskOsMax" "$sixdeskCpuSpeedMin" "$sixdeskcr" "$sixdeskclientv" "$sixdeskout" > $tmp 2>&1
    sixdeskstat=$?
    if test $sixdeskstat -ne 0
    then
      mymess 0 "UploadTask failed with Status $sixdeskstat !!! `cat $tmp`"
    else
      grep error $tmp > /dev/null 2>&1
      sixdeskstat=$?
      if test $sixdeskstat -eq 0
      then
        sixdeskmess=" UploadTask failed!!! `cat $tmp`"
      else
        grep "TaskId:" $tmp > /dev/null 2>&1
        sixdeskstat=$?
        if test $sixdeskstat -ne 0
        then
          cat $tmp
          mymess 0 "UploadTask problem, no TaskId was found!!! `cat $tmp`"
        else
          sixdesktaskid=`sed -e's/TaskId: *//' $tmp` 
          sixdesktaskid=`echo $sixdesktaskid | sed -e's/[^0-9]//g'`
          if test "$sixdesktaskid" = ""
          then
            mymess 0 "UploadTask problem, a NULL TaskId was found!!! `cat $tmp`"
          else
            gotit="OK"
            sixdesktaskid=cpss$sixdesktaskid
          fi
        fi   
      fi
    fi
  done 
  rm $sixdeskjobs_logs/run/fort.2 $sixdeskjobs_logs/run/fort.3 $sixdeskjobs_logs/run/fort.8 $sixdeskjobs_logs/run/fort.16
  if test "$gotit" != "OK"
  then
    mymess 0 "FAILED to submit task 10 times!!"
    rm -f $tmp
    myexit 10
  fi
  ###mylock $sixdeskwork
  sixdeskoldtaskid=""
  if test -s $sixdeskwork/taskids
  then
    grep "$sixdeskRunnam " $sixdeskwork/taskids
    sixdeskstat=$?
    if test $sixdeskstat -eq 0
    then
      line=`grep "$sixdeskRunnam " $sixdeskwork/taskids`
      sixdeskoldtaskid=`echo $line | cut -d " " -f2-`
    fi
  fi
  if test "$sixdeskoldtaskid" = ""
  then
    sixdesktaskids=$sixdesktaskid" "
  else
    sixdesktaskids=$sixdeskoldtaskid" "$sixdesktaskid" "
  fi
  if test ! -s $SIXDESKWHERE/fort.10.gz
  then
    touch $SIXDESKWHERE/JOB_NOT_YET_COMPLETED
  fi
  if test -s $sixdeskwork/taskids
  then
    sed -e'/'$sixdeskRunnam' /d' $sixdeskwork/taskids > $tmp
    mv $tmp $sixdeskwork/taskids
  fi
  echo "$sixdeskRunnam" "$sixdesktaskids" >> $sixdeskwork/taskids
  if test "$sixdeskoldtaskid" != ""
  then
    mymess 1 "Task $sixdeskRunnam re-submitted with TaskId $sixdesktaskid; other tasks $sixdeskoldtaskid"
  else
    echo $sixdeskRunnam >> $sixdeskwork/incomplete_cases
    echo $sixdeskRunnam >> $sixdeskwork/myincomplete_cases
    mymess 1 "Task $sixdeskRunnam submitted with TaskId $sixdesktaskid"
  fi
  ###myunlock $sixdeskwork
  ###mylock $sixdeskjobs 
  echo "$sixdeskRunnam" "$sixdesktaskid" >> $sixdeskjobs/tasks
  echo "$sixdeskRunnam" "$sixdesktaskid" >> $sixdeskjobs/incomplete_tasks
  ###myunlock $sixdeskjobs 
  rm -f $tmp
fi
