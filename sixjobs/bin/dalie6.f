C ANFANG - HAUPTPROGRAMM -
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      real tlim,TIME0,time1
      COMMON /II/NO,NV
*
      TLIM = 1e7
      CALL TIMEST(TLIM)
      CALL TIMEX(TIME0)
      WRITE(6,*) ' ORDER, # VARIABLES'
      READ(5,*) NO,NV
      CALL DAINI(NO,NV,0)
      EPS=1.E-38
      CALL DAEPS(EPS)
      CALL MAINIA6(EPS)
      CALL TIMEX(TIME1)
      TIME = TIME1-TIME0
      WRITE(*,'(5x,a17,i3,a6,g16.5,a10)') 'N.F.-Calc. Order ',No,
     &' took ',TIME,' second(s)'
      STOP
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE MAINIA6(EPS)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      PARAMETER (NSUPER=1)
CCC   THE FOLLOWING IS THE ONLY PARAMETER CHANGED SO FAR FOR 6D
      PARAMETER (NDIM2=6)
      PARAMETER (NT=20)
      PARAMETER (NTT=20)
      DIMENSION WX(NDIM),OLD(NDIM)
      COMMON /NOM/ BB2,ROT,ROTI,CTR,CJG,RTC,BB1,REL
      COMMON /VECTEUR/V,W,X,XY,H,FT,A2,A2I,CM,A1,A1I
      INTEGER J(NT),OPT(NT),XOPT(NT)
      COMMON /STABLE/STA(NDIM),DSTA(NDIM)
      COMMON /ISTABLE/ISTA(NDIM),IDSTA(NDIM)
      COMMON /II/NO,NV
      COMMON /TUNE/ ANGLE(NDIM),ABM(-NTT:NTT,-NTT:NTT,-NTT:NTT)
     @,AAM(-NTT:NTT,-NTT:NTT,-NTT:NTT),TUE(-NTT:NTT,-NTT:NTT,-NTT:NTT)
      COMMON /SUPER/HS,FS
      EXTERNAL RESL
*DAE{ (NO,NV) BB1,BB2,ROT(NT),ROTI(NT),REL(NT),FS
*DAE{ (NO,NV) CTR(NT),CJG(NT),RTC(NT),A2(NT),A2I(NT),CM(NT),A1(NT)
*DAE{ (NO,NV) V(NT),W(NT),X(NT),XY(NT),H,FT,A1I(NT),HS
      INTEGER BB1,BB2,ROT(NT),ROTI(NT),REL(NT),FS
      INTEGER CTR(NT),CJG(NT),RTC(NT),A2(NT),A2I(NT),CM(NT),A1(NT)
      INTEGER V(NT),W(NT),X(NT),XY(NT),H,FT,A1I(NT),HS
*
      CALL DAALL(BB1,1,'BB1       ',NO,NV)
      CALL DAALL(BB2,1,'BB2       ',NO,NV)
      CALL DAALL(ROT,NT,'ROT       ',NO,NV)
      CALL DAALL(ROTI,NT,'ROTI      ',NO,NV)
      CALL DAALL(REL,NT,'REL       ',NO,NV)
      CALL DAALL(FS,1,'FS        ',NO,NV)
      CALL DAALL(CTR,NT,'CTR       ',NO,NV)
      CALL DAALL(CJG,NT,'CJG       ',NO,NV)
      CALL DAALL(RTC,NT,'RTC       ',NO,NV)
      CALL DAALL(A2,NT,'A2        ',NO,NV)
      CALL DAALL(A2I,NT,'A2I       ',NO,NV)
      CALL DAALL(CM,NT,'CM        ',NO,NV)
      CALL DAALL(A1,NT,'A1        ',NO,NV)
      CALL DAALL(V,NT,'V         ',NO,NV)
      CALL DAALL(W,NT,'W         ',NO,NV)
      CALL DAALL(X,NT,'X         ',NO,NV)
      CALL DAALL(XY,NT,'XY        ',NO,NV)
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(FT,1,'FT        ',NO,NV)
      CALL DAALL(A1I,NT,'A1I       ',NO,NV)
      CALL DAALL(HS,1,'HS        ',NO,NV)
*DA }
      X2PI=ATAN(ONE)*EIGHT
      WRITE(6,*) ' WX,WY,WT,STA1,STA2,STA3,IHAM'
      READ(2,*) (WX(I),I=1,NDIM),(STA(I), I=1,NDIM),IHAM
      WRITE(6,*) (WX(I),I=1,NDIM),(INT(STA(I)),I=1,NDIM),IHAM
      DO 450 I=1,NDIM
 450  DSTA(I)=ONE-STA(I)
      DO 223 I=1,NDIM
      ANGLE(I)=WX(I)*X2PI
      ISTA(I)=INT(STA(I)+.01)
 223  IDSTA(I)=INT(DSTA(I)+.01)
      CALL CREAT
      CALL DACOND(XY,ZERO)
      DO 99 I=NDIM2+1,NV
 99   CALL DAVAR(XY(I),ZERO,I)
 999  READ(2,*) ITYPE,MFILE
      IF(IHAM.EQ.0) THEN
      DO 1 I=1,NDIM2
      CALL DAREA(XY(I),MFILE)
 1    CALL DAPOK(XY(I),J,ZERO)
CFRS    1 CONTINUE
      ELSE
      CALL DAREA(XY(1),MFILE)
      CALL DAPOK(XY(1),J,ZERO)
CFRS  CALL DAPOK(XY(1),J,ZERO)
      ENDIF
 1000 CONTINUE
      READ(2,*)ITYPE,MFILE
      IF(ITYPE.EQ.1000) GOTO 1001
      IF(ITYPE.EQ.3) GOTO 666
      IF(ITYPE.EQ.30) GOTO 677
      IF(ITYPE.EQ.4) GOTO 555
      IF(ITYPE.EQ.5) GOTO 777
      IF(ITYPE.EQ.6) GOTO 888
      IF(ITYPE.EQ.7) GOTO 333
      IF(ITYPE.EQ.8) GOTO 444
 666  READ(2,*) NORD,FAC
      CALL GOFIX(XY,X,V,W,REL,A1,A1I,NORD)
      CALL MIDBLOCK(X,A2,A2I,ANGLE)
      WRITE(6,*) (ANGLE(I)/X2PI,I=1,NDIM)
      CALL AMBM(NO,IHAM)
      CALL ROTATION
      CALL DACOPD(A2I,V)
      CALL DACCT(V,NDIM2,X,NV,W,NDIM2)
      CALL DACCT(W,NDIM2,A2,NV,V,NDIM2)
      CALL DACCT(V,NDIM2,ROTI,NV,X,NDIM2)
      CALL ORDERMAP(H,FT,X,V,W,REL,CJG,CTR,RTC,ROTI)
      CALL DAPRID(A1I,MFILE)
      CALL DAPRID(A2I,MFILE)
      CALL DAPRI(FT,MFILE)
      DO 667 I=1,NDIM
 667  ANGLE(I)=ANGLE(I)*FAC
      CALL ROTATION
      CALL DAPRID(ROT,MFILE)
         CALL DACMU(H,FAC,BB2)
         CALL DACOP(BB2,H)
      CALL DAPRI(H,MFILE)
      CALL DAPRI(FT,MFILE)
      CALL DAPRID(A2,MFILE)
      CALL DAPRID(A1,MFILE)
      GOTO 1000
 677  READ(2,*) NORD,FAC
      CALL GOFIX(XY,X,V,W,REL,A1,A1I,NORD)
      CALL MIDBLOCK(X,A2,A2I,ANGLE)
      WRITE(6,*) (ANGLE(I)/X2PI,I=1,NDIM)
      DO 566 IJ=1,NDIM
 566  OLD(IJ)=ANGLE(IJ)
      CALL ROTATION
      READ(2,*) (WX(I),I=1,NDIM)
       DO 323 I=1,NDIM
      ANGLE(I)=WX(I)*X2PI
 323  CONTINUE
      CALL AMBM(NO,IHAM)
      CALL DACOPD(A2I,V)
      CALL DACCT(V,NDIM2,X,NV,W,NDIM2)
      CALL DACCT(W,NDIM2,A2,NV,V,NDIM2)
      CALL DACCT(V,NDIM2,ROTI,NV,X,NDIM2)
      CALL ROTATION
      WRITE(6,*) ' GIVE ORDER OF DETUNING '
      READ(5,*) IA
      DO 345 I=1,NDIM
      J(NV)=IA
      J(2*I-1)=2
      RR=-(OLD(I)-ANGLE(I))/TWO
      CALL DAPOK(H,J,RR)
      J(2*I-1)=0
      J(2*I)=2
      CALL DAPOK(H,J,RR)
      J(NV)=0
 345  J(2*I)=0
      CALL FEXPO(H,X,W,IA+2,NO,ONE,1)
      CALL DACOPD(W,X)
      CALL ORDJ0MAP(H,FT,X,V,W,REL,CJG,CTR,RTC,ROTI,IA,IHAM)
      CALL DAPRID(A1I,MFILE)
      CALL DAPRID(A2I,MFILE)
      CALL DAPRI(FT,MFILE)
      DO 767 I=1,NDIM
 767  ANGLE(I)=ANGLE(I)*FAC
      CALL ROTATION
      CALL DAPRID(ROT,MFILE)
         CALL DACMU(H,FAC,BB2)
         CALL DACOP(BB2,H)
      CALL DAPRI(H,MFILE)
      CALL DAPRI(FT,MFILE)
      CALL DAPRID(A2,MFILE)
      CALL DAPRID(A1,MFILE)
      GOTO 1000
 555  READ(2,*) FAC
      CALL DACOP(XY(1),H)
      DO 302 I=1,NDIM
      J(2*I-1)=2
      CALL DAPEK(H,J,RR)
      ANGLE(I)=-TWO*RR
 302  J(2*I-1)=0
      WRITE(6,*) ANGLE(1)/X2PI,ANGLE(2)/X2PI
      CALL AMBM(NO,IHAM)
      CALL ROTATION
      CALL ORDERHAM(H,FT,CJG,CTR,RTC)
         CALL DACMU(H,FAC,BB2)
         CALL DACOP(BB2,H)
      CALL DAPRI(FT,MFILE)
      CALL DAPRI(H,MFILE)
      CALL DAPRI(FT,MFILE)
      GOTO 1000
 777  CONTINUE
      IF(MFILE.EQ.0) THEN
      WRITE(6,*) ' CTRBASIS ON H AND FT '
      WRITE(6,*) ' DO YOU WANT H TO CONTAIN H_2 ?'
      READ(5,*) IH
      IF(IH.EQ.1) THEN
      DO 301 I=1,NDIM
      J(2*I-1)=2
      XXX=ZERO
      IF(ANGLE(I).GT.X2PI/TWO) XXX=X2PI
      CALL DAPOK(H,J,-(ANGLE(I)-XXX)/TWO)
      J(2*I-1)=0
      J(2*I)=2
      CALL DAPOK(H,J,-(ANGLE(I)-XXX)/TWO)
 301  J(2*I)=0
      ENDIF
      WRITE(6,*)'GIVE FILE NUMBER '
      READ(5,*) MF
      CALL DAPRI(H,MF)
            CALL CTRBASIS(H,HS,CTR,CJG)
            CALL CTRBASIS(FT,FS,CTR,CJG)
            CALL DAPRI(H,MF)
            CALL DAPRI(HS,MF)
            CALL DAPRI(FT,MF)
            CALL DAPRI(FS,MF)
      WRITE(6,*) ' ONLY THE RESONANCES ? 0=NO, OTHERWISE FILE # '
      READ(5,*) IX
      IF(IX.GT.0) THEN
      WRITE(6,*) 'GIVE A TEMPORARY EPS, SHUFFLING INDEX,NVFIXED '
      READ(5,*) EPS1,ISH,NVF
      CALL DACFU(H,RESL,BB2)
      CALL DACOP(BB2,H)
      CALL DACFU(HS,RESL,BB2)
      CALL DACOP(BB2,HS)
      CALL DACFU(FT,RESL,BB2)
      CALL DACOP(BB2,FT)
      CALL DACFU(FS,RESL,BB2)
      CALL DACOP(BB2,FS)
      IF(ISH.EQ.1) THEN
      CALL DACOND(XY,ZERO)
      CALL DACOP(H,XY(1))
      CALL DACOP(HS,XY(2))
      DO 367 II=1,NVF    !NDIM2
 367  OPT(II)=II+NV-NVF   !NDIM2
      DO 368 II=NVF+1,NV    !NDIM2+1,NV
 368  OPT(II)=II-NVF   ! NDIM2
      DO 800 II=1,NV
 800  CALL DAVAR(W(II),ZERO,OPT(II))
      CALL DACCT(XY,NV,W,NV,X,NV)
      CALL DAINV(W,NV,V,NV)
      CALL DACCT(V,NV,X,NV,XY,NV)
      WRITE(6,*) ' PLANES OF (H,HS) HAVE BEEN SHUFFLED '
      CALL DAEPS(EPS1)
      DO 369 II=1,NV
      CALL DAABS(XY(II),RR)
      IF(RR.GT.EPS1.AND.RR.NE.ONE) THEN
      CALL DAPRI(XY(II),IX)
      ENDIF
 369  CONTINUE
      ENDIF
      CALL DAEPS(EPS1)
            CALL DAPRI(H,IX)
            CALL DAPRI(HS,IX)
            CALL DAPRI(FT,IX)
            CALL DAPRI(FS,IX)
      CALL DAEPS(EPS)
      ENDIF
      ELSE
      WRITE(6,*)'GIVE FILE NUMBER FOR MAP PRINTED'
      READ(5,*) MF
      CALL ROTATION
      CALL DACON(BB1,ZERO)
      CALL DACON(BB2,ZERO)
      WRITE(6,*)'GIVE DIRECTION OF BASIS CHANGE'
      WRITE(6,*) ' CTR = 1      RTC = -1 '
      READ(5,*) ICH
      IF(ICH.EQ.1) THEN
      CALL DAREA(BB1,MFILE)
           CALL CTRBASIS(BB1,BB2,CTR,CJG)
      CALL DAPRI(BB1,MF)
      CALL DAPRI(BB2,MF)
      ELSE
      CALL DAREA(BB1,MFILE)
      CALL DAREA(BB2,MFILE)
           CALL RTCBASIS(BB1,BB2,RTC)
      CALL DAPRI(BB2,MF)
       ENDIF
      ENDIF
      GOTO 1000
 888  CONTINUE
      WRITE(6,*) ' NOW FACTORIZING THE MAP '
      CALL MARYFACT(XY,X,H,REL,V,W)
      CALL DAPRID(X,MFILE)
      CALL DAPRI(H,MFILE)
      GOTO 1000
 333  CONTINUE
      CALL GOFIX(XY,X,V,W,REL,A1,A1I,1)
      CALL MIDBLOCK(X,A2,A2I,ANGLE)
      WRITE(6,*) (ANGLE(I)/X2PI,I=1,NDIM)
      CALL DACON(H,ZERO)
      DO 311 I=1,NDIM
      J(2*I-1)=2
      CALL DAPOK(H,J,-ANGLE(I)/TWO)
      J(2*I-1)=0
      J(2*I)=2
      CALL DAPOK(H,J,-ANGLE(I)/TWO)
 311  J(2*I)=0
      CALL DACCT(A2I,NDIM2,A1I,NV,X,NDIM2)
      CALL DACCT(H,1,X,NV,BB1,1)
      READ(2,*) NRMAX
      CALL EXBERZ(BB1,REL,V,NRMAX,ONE)
      CALL DACOND(X,ZERO)
      CALL DANOT(1)
      CALL DACOPD(XY,X)
      CALL DANOT(NO)
      CALL DALIND(XY,ONE,X,ONEM,W)
      CALL DALIND(W,ONE,V,ONE,XY)
      IF(MFILE.NE.0) THEN
      CALL DAPRID(XY,MFILE)
      WRITE(6,*)'THE MAP WITH A NEW LINEAR PART WRITTEN ON FILE ',MFILE
      ENDIF
      GOTO 1000
 444  CONTINUE
      READ(2,*) MF1,MF2
      WRITE(6,*) ' EVALUATING TUNE SHIFTS FUNCTIONS '
      IF(MFILE.EQ.0) THEN
      CALL DACOP(H,HS)
      WRITE(6,*) ' USING THE CURRENT HR (STORED INTO THE ARRAY H)'
      ELSE
      CALL ROTATION
      CALL DAREA(HS,MFILE)
      ENDIF
      CALL DACOND(X,ZERO)
      CALL DACOND(V,ZERO)
      COE=-TWO/X2PI
      DO 901 I=1,NDIM
      CALL DADER(2*I-1,HS,BB1)
      CALL DATRA(2*I,BB1,BB2)
      CALL DACMU(BB2,COE,X(I))
      CALL DACOP(X(I),BB1)
      CALL DACON(BB2,ZERO)
      CALL RTCBASIS(BB1,BB2,RTC)
 901  CALL DACOP(BB2,V(I))
      WRITE(6,*)' ACTION RESULTS ON FILE ',MF1
      WRITE(6,*)' Q-P RESULTS ON FILE ',MF2
      CALL DAPRID(X,MF1)
      CALL DAPRID(V,MF2)
      GOTO 1000
 1001 CONTINUE
      RETURN
      END
  
C ANFANG UNTERPROGRAMM
      SUBROUTINE AMBM(NO,IHAM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
*****************************************************************
* COMPUTES THE FACTORS USED IN RESB OR RESBS FOR THE COMPUTATION*
* OF THE CANONICAL TRANSFORMATION.                              *
* THE USER WILL MODIFY THIS SUBROUTINE TO LEAVE SOME RESONANCES,*
* AT PRESENT THE TARGET MAP IS AN AMPLITUDE DEPENDENT ROTATION  *
*****************************************************************
      PARAMETER (NTT=20)
      PARAMETER (NDIM=3)
      PARAMETER (NMX=200)
      COMMON /TUNE/ ANGLE(NDIM),ABM(-NTT:NTT,-NTT:NTT,-NTT:NTT)
     @,AAM(-NTT:NTT,-NTT:NTT,-NTT:NTT),TUE(-NTT:NTT,-NTT:NTT,-NTT:NTT)
      COMMON /STABLE/STA(NDIM),DSTA(NDIM)
      DIMENSION MX(NDIM,NMX)
      REWIND 3
      READ(3,*) NRES
      if(NRES.gt.NMX) then
        print*,'     Error - only ',NMX,' resonances can be left in the'
     &  ,' Hamiltonian'
        stop
      endif
      DO 100 I=1,NRES
 100  READ(3,*) (MX(NN,I),NN=1,NDIM)
      DO 1 I=-NO,NO
      DO 2 J=-NO,NO
      DO 3 K=-NO,NO
       ABM(I,J,K)=ZERO
       AAM(I,J,K)=ZERO
      TUE(I,J,K)=ONE
      IF(NRES.EQ.-1) GOTO 3
      IF(ABS(I)+ABS(J)+ABS(K).GT.NO) GOTO 3
      IF(ABS(I)+ABS(J)+ABS(K).NE.0)THEN
      IRES=0
      DO 101 IC=1,NRES
      IF(MX(1,IC).EQ.I.AND.MX(2,IC).EQ.J.AND.MX(3,IC).EQ.K) IRES=1
      IF(MX(1,IC).EQ.-I.AND.MX(2,IC).EQ.-J.AND.MX(3,IC).EQ.-K) IRES=1
      IF(IRES.EQ.1) GOTO 3
 101  CONTINUE
            AN1=I*ANGLE(1)
            AN2=J*ANGLE(2)
            AN3=K*ANGLE(3)
            AD1=AN1*DSTA(1)
            AD2=AN2*DSTA(2)
            AD3=AN3*DSTA(3)
            AD=AD1+AD2+AD3
            AS1=AN1*STA(1)
            AS2=AN2*STA(2)
            AS3=AN3*STA(3)
            AS=AS1+AS2+AS3
* IHAM = 1 FOR CALCULATION ON THE PSEUDO-HAMILTONIAN
            IF(IHAM.NE.1) THEN
             CO=COS(AS)
             EXH=EXP(AD/TWO)
             EX=EXH**2
             ANS=FOUR*EX*(SINH(AD/TWO)**2+SIN(AS/TWO)**2)
             AAM(I,J,K)=TWO*(-EXH*SINH(AD/TWO)+EX*SIN(AS/TWO)**2)
     &       /ANS
             ABM(I,J,K)=SIN(AS)*EX/ANS
             TUE(I,J,K)=ZERO
            ELSE
             ANS=AD**2+AS**2
             ABM(I,J,K)=AS/ANS
             AAM(I,J,K)=-AD/ANS
             TUE(I,J,K)=ZERO
            ENDIF
      ENDIF
 3    CONTINUE
 2    CONTINUE
 1    CONTINUE
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE CREAT
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      PARAMETER (NTT=20)
      PARAMETER (NSUPER=1)
      COMMON /NOM/ BB2,ROT,ROTI,CTR,CJG,RTC,BB1,REL
      COMMON /VECTEUR/V,W,X,XY,H,FT,A2,A2I,CM,A1,A1I
      COMMON /TUNE/ ANGLE(NDIM),ABM(-NTT:NTT,-NTT:NTT,-NTT:NTT)
     @,AAM(-NTT:NTT,-NTT:NTT,-NTT:NTT),TUE(-NTT:NTT,-NTT:NTT,-NTT:NTT)
      COMMON /SUPER/HS,FS
      INTEGER J(20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) BB1,BB2,ROT(NT),ROTI(NT),REL(NT),FS
*DAE{ (NO,NV) CTR(NT),CJG(NT),RTC(NT),A2(NT),A2I(NT),CM(NT),A1(NT)
*DAE{ (NO,NV) V(NT),W(NT),X(NT),XY(NT),H,FT,A1I(NT),HS
      INTEGER BB1,BB2,ROT(NT),ROTI(NT),REL(NT),FS
      INTEGER CTR(NT),CJG(NT),RTC(NT),A2(NT),A2I(NT),CM(NT),A1(NT)
      INTEGER V(NT),W(NT),X(NT),XY(NT),H,FT,A1I(NT),HS
*
      CALL DAALL(BB1,1,'BB1       ',NO,NV)
      CALL DAALL(BB2,1,'BB2       ',NO,NV)
      CALL DAALL(ROT,NT,'ROT       ',NO,NV)
      CALL DAALL(ROTI,NT,'ROTI      ',NO,NV)
      CALL DAALL(REL,NT,'REL       ',NO,NV)
      CALL DAALL(FS,1,'FS        ',NO,NV)
      CALL DAALL(CTR,NT,'CTR       ',NO,NV)
      CALL DAALL(CJG,NT,'CJG       ',NO,NV)
      CALL DAALL(RTC,NT,'RTC       ',NO,NV)
      CALL DAALL(A2,NT,'A2        ',NO,NV)
      CALL DAALL(A2I,NT,'A2I       ',NO,NV)
      CALL DAALL(CM,NT,'CM        ',NO,NV)
      CALL DAALL(A1,NT,'A1        ',NO,NV)
      CALL DAALL(V,NT,'V         ',NO,NV)
      CALL DAALL(W,NT,'W         ',NO,NV)
      CALL DAALL(X,NT,'X         ',NO,NV)
      CALL DAALL(XY,NT,'XY        ',NO,NV)
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(FT,1,'FT        ',NO,NV)
      CALL DAALL(A1I,NT,'A1I       ',NO,NV)
      CALL DAALL(HS,1,'HS        ',NO,NV)
*DA }
  
      DO 222 I=1,NV
      J(I)=0
      CALL DAVAR(REL(I),ZERO,I)
      CALL DACOP(REL(I),CJG(I))
 222  CONTINUE
      DO 33 I=1,2*NDIM
      CALL DAVAR(XY(I),ZERO,I)
      CALL DAVAR(A1(I),ZERO,I)
      CALL DAVAR(A1I(I),ZERO,I)
      CALL DAVAR(X(I),ZERO,I)
      CALL DAVAR(V(I),ZERO,I)
 33   CALL DAVAR(W(I),ZERO,I)
  
      DO 3 I=1,NDIM
      CALL DAADD(REL(2*I-1),REL(2*I),RTC(2*I-1))
      CALL DASUB(REL(2*I-1),REL(2*I),RTC(2*I))
      CALL DALIN(REL(2*I-1),HALF,REL(2*I),HALF,CTR(2*I-1))
 3    CALL DALIN(REL(2*I-1),HALF,REL(2*I),HALFM,CTR(2*I))
      DO 4 I=2*NDIM+1,NV
      CALL DAVAR(ROT(I),ZERO,I)
      CALL DAVAR(ROTI(I),ZERO,I)
      CALL DAVAR(A2(I),ZERO,I)
      CALL DAVAR(A2I(I),ZERO,I)
      CALL DAVAR(CM(I),ZERO,I)
      CALL DAVAR(XY(I),ZERO,I)
      CALL DAVAR(A1(I),ZERO,I)
      CALL DAVAR(A1I(I),ZERO,I)
      CALL DAVAR(X(I),ZERO,I)
      CALL DAVAR(V(I),ZERO,I)
      CALL DAVAR(W(I),ZERO,I)
      CALL DAVAR(RTC(I),ZERO,I)
 4    CALL DAVAR(CTR(I),ZERO,I)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE HYPER(A,CH,SH)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      X=EXP(A)
      XI=ONE/X
      CH=(X+XI)/TWO
      SH=(X-XI)/TWO
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE ROTATION
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      PARAMETER (NTT=20)
      PARAMETER (NSUPER=1)
      COMMON /NOM/ BB2,ROT,ROTI,CTR,CJG,RTC,BB1,REL
      COMMON /VECTEUR/V,W,X,XY,H,FT,A2,A2I,CM,A1,A1I
      COMMON /TUNE/ ANGLE(NDIM),ABM(-NTT:NTT,-NTT:NTT,-NTT:NTT)
     @,AAM(-NTT:NTT,-NTT:NTT,-NTT:NTT),TUE(-NTT:NTT,-NTT:NTT,-NTT:NTT)
      COMMON /ISTABLE/ISTA(NDIM),IDSTA(NDIM)
      DIMENSION CO(NDIM),SI(NDIM)
      INTEGER J(20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) BB1,BB2,ROT(NT),ROTI(NT),REL(NT),FS
*DAE{ (NO,NV) CTR(NT),CJG(NT),RTC(NT),A2(NT),A2I(NT),CM(NT),A1(NT)
*DAE{ (NO,NV) V(NT),W(NT),X(NT),XY(NT),H,FT,A1I(NT),HS
      INTEGER BB1,BB2,ROT(NT),ROTI(NT),REL(NT),FS
      INTEGER CTR(NT),CJG(NT),RTC(NT),A2(NT),A2I(NT),CM(NT),A1(NT)
      INTEGER V(NT),W(NT),X(NT),XY(NT),H,FT,A1I(NT),HS
*
      CALL DAALL(BB1,1,'BB1       ',NO,NV)
      CALL DAALL(BB2,1,'BB2       ',NO,NV)
      CALL DAALL(ROT,NT,'ROT       ',NO,NV)
      CALL DAALL(ROTI,NT,'ROTI      ',NO,NV)
      CALL DAALL(REL,NT,'REL       ',NO,NV)
      CALL DAALL(FS,1,'FS        ',NO,NV)
      CALL DAALL(CTR,NT,'CTR       ',NO,NV)
      CALL DAALL(CJG,NT,'CJG       ',NO,NV)
      CALL DAALL(RTC,NT,'RTC       ',NO,NV)
      CALL DAALL(A2,NT,'A2        ',NO,NV)
      CALL DAALL(A2I,NT,'A2I       ',NO,NV)
      CALL DAALL(CM,NT,'CM        ',NO,NV)
      CALL DAALL(A1,NT,'A1        ',NO,NV)
      CALL DAALL(V,NT,'V         ',NO,NV)
      CALL DAALL(W,NT,'W         ',NO,NV)
      CALL DAALL(X,NT,'X         ',NO,NV)
      CALL DAALL(XY,NT,'XY        ',NO,NV)
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(FT,1,'FT        ',NO,NV)
      CALL DAALL(A1I,NT,'A1I       ',NO,NV)
      CALL DAALL(HS,1,'HS        ',NO,NV)
*DA }
      DO 1 I=1,NDIM
      IF(ISTA(I).EQ.0) THEN
      CALL HYPER(ANGLE(I),CH,SH)
      CO(I)=CH
      SI(I)=-SH
      ELSE
      CO(I)=COS(ANGLE(I))
      SI(I)=SIN(ANGLE(I))
      ENDIF
 1    CONTINUE
      DO 5 I=1,NDIM
      IF(ISTA(I).EQ.0)THEN
      SIM=SI(I)
      ELSE
      SIM=-SI(I)
      ENDIF
      J(2*I-1)=1
      CALL DAPOK(ROT(2*I-1),J,CO(I))
      CALL DAPOK(ROT(2*I),J,SIM)
      CALL DAPOK(ROTI(2*I-1),J,CO(I))
      SIMV=-SIM
      CALL DAPOK(ROTI(2*I),J,SIMV)
      J(2*I-1)=0
      J(2*I)=1
      SIMV=-SI(I)
      CALL DAPOK(ROT(2*I),J,CO(I))
      CALL DAPOK(ROT(2*I-1),J,SI(I))
      CALL DAPOK(ROTI(2*I),J,CO(I))
      CALL DAPOK(ROTI(2*I-1),J,SIMV)
 5    J(2*I)=0
      DO 22 I=1,NDIM
      IF(ISTA(I).EQ.1) THEN
      CALL DACOP(REL(2*I-1),CJG(2*I))
      CALL DACOP(REL(2*I),CJG(2*I-1))
      ELSE
      CALL DACOP(REL(2*I-1),CJG(2*I-1))
      CALL DACOP(REL(2*I),CJG(2*I))
      ENDIF
 22   CONTINUE
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE FOREST
      WRITE(6,*) '#####################################################'
      WRITE(6,*) '#                                                   #'
      WRITE(6,*) '#      RED ALERT-RED ALERT- RED ALERT-RED ALERT     #'
      WRITE(6,*) '#                                                   #'
      WRITE(6,*) '#   ACHTUNG-ATTENTION-ATTENZIONE-ATTENCION-ABUNAI   #'
      WRITE(6,*) '#                                                   #'
      WRITE(6,*) '#   YOU ARE NOW USING AN EXTREMELY DANGEROUS        #'
      WRITE(6,*) '#   DA-PACKAGE ILLEGALLY AND CARELESSLY             #'
      WRITE(6,*) '#   MODIFIED IN ITS PRIVATE PARTS BY THE PERVERTED  #'
      WRITE(6,*) '#   ETIENNE FOREST!!!!!!!!                          #'
      WRITE(6,*) '#                                                   #'
      WRITE(6,*) '#   ETIENNE FOREST PROBABLY INFESTED THIS PROGRAM   #'
      WRITE(6,*) '#   PROGRAM WITH BUGS.                              #'
      WRITE(6,*) '#                                                   #'
      WRITE(6,*) '#   PLEASE CONTACT MARTIN BERZ FOR A SAFE VERSION.  #'
      WRITE(6,*) '#                                                   #'
      WRITE(6,*) '#####################################################'
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE CTRBASIS(HC,HR,CTR,CJG)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
*****************************************************************
* FROM CARTESIAN TO RESONANCE BASIS : HC IS TRANSFORMED INTO HR *
*  HR SITS IN IRWIN SPACE                                       *
*****************************************************************
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) HR,HC,CTR(NT),CJG(NT)
*DAI{ (NO,NV) B1,B2
      INTEGER HR,HC,CTR(NT),CJG(NT)
      INTEGER B1,B2
*
      SAVE    B1,B2
      PARAMETER
     *(LX 2 = 1 +1 )
      DATA    B1,B2/ LX  2 * 0 /
*
      CALL DAALL(HR,1,'HR        ',NO,NV)
      CALL DAALL(HC,1,'HC        ',NO,NV)
      CALL DAALL(CTR,NT,'CTR       ',NO,NV)
      CALL DAALL(CJG,NT,'CJG       ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
      CALL DAALL(B2,1,'B2        ',NO,NV)
*DA }
* GOING INTO IRWIN SPACE
      CALL CPART(HC,B1)
* HR = B1 O CTR ; GOING INTO THE RESONANCE BASIS INSIDE IRWIN SPACE
      CALL TRX(B1,HR,CTR)
      CALL TRX(HR,HC,CJG)
      CALL DALIN(HR,HALF,HC,HALF,B1)
      CALL DALIN(HR,HALF,HC,HALFM,B2)
      CALL DACOP(B1,HC)
      CALL DACOP(B2,HR)
      CALL DADAL(B2,1)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE RTCBASIS(HR,HC,RTC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
*****************************************************************
* FROM RESONANCE TO CARTESIAN BASIS : HR IS TRANSFORMED INTO HC *
*****************************************************************
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) HR,HC,RTC(NT)
*DAI{ (NO,NV) B1
      INTEGER HR,HC,RTC(NT)
      INTEGER B1
*
      SAVE    B1
      PARAMETER
     *(LX 2 = 1 )
      DATA    B1/ LX  2 * 0 /
*
      CALL DAALL(HR,1,'HR        ',NO,NV)
      CALL DAALL(HC,1,'HC        ',NO,NV)
      CALL DAALL(RTC,NT,'RTC       ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
*DA }
*     GOING INTO IRWIN SPACE
      CALL DAADD(HR,HC,B1)
      CALL DACOP(B1,HR)
* B1 = HR O RTC ; CHANGING BASIS INSIDE IRWIN SPACE
      CALL TRX(HR,B1,RTC)
* HC = BACK INTO REAL CARTESIAN SPACE BY MASSAGING THE STABLE PLANES
      CALL CPART(B1,HC)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE RESB(H,FT,CJG)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
*****************************************************************
* RESONANCE BASIS ANALYSIS: H IS TRANSFORMED INTO H USING FT    *
*****************************************************************
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      EXTERNAL GBM,GAM,TUER
      COMMON /II/NO,NV
*DAE{ (NO,NV) H,FT,CJG(NT)
*DAI{ (NO,NV) B1,B2,B3
      INTEGER H,FT,CJG(NT)
      INTEGER B1,B2,B3
*
      SAVE    B1,B2,B3
      PARAMETER
     *(LX 2 = 1 +1 +1 )
      DATA    B1,B2,B3/ LX  2 * 0 /
*
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(FT,1,'FT        ',NO,NV)
      CALL DAALL(CJG,NT,'CJG       ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
      CALL DAALL(B2,1,'B2        ',NO,NV)
      CALL DAALL(B3,1,'B3        ',NO,NV)
*DA }
* B1 = H O CJG ; MASSAGING THE STABLE PLANES
      CALL TRX(H,B1,CJG)
* GAM AND GBM ARE TUNE DEPENDENT FUNCTIONS
      CALL DACFU(H,GAM,B2)
* TUER KILLS THE RESONANCES TRANSFORMED BY GAM AND GBM
         CALL DACFU(H,TUER,B3)
         CALL DACOP(B3,H)
      CALL DACFU(B1,GBM,B3)
      CALL DAADD(B2,B3,FT)
      CALL DADAL(B3,1)
      CALL DADAL(B2,1)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE MARYFACT(XY,X,H,REL,V,W)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
*****************************************************************
* COMPUTES THE MARYLIE FACTORISATION OF THE NON-LINEAR          *
* DA-FUNCTION X, USING A LOOP SIMILAR TO ORDERMAP.              *
*****************************************************************
      PARAMETER (NDIM=3)
      PARAMETER (NDIM2=6)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) XY(NT),X(NT),V(NT),REL(NT),H,W(NT)
*DAI{ (NO,NV) B1,B5
      INTEGER XY(NT),X(NT),V(NT),REL(NT),H,W(NT)
      INTEGER B1,B5
*
      SAVE    B1,B5
      PARAMETER
     *(LX 2 = 1 +1 )
      DATA    B1,B5/ LX  2 * 0 /
*
      CALL DAALL(XY,NT,'XY        ',NO,NV)
      CALL DAALL(X,NT,'X         ',NO,NV)
      CALL DAALL(V,NT,'V         ',NO,NV)
      CALL DAALL(REL,NT,'REL       ',NO,NV)
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(W,NT,'W         ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
      CALL DAALL(B5,1,'B5        ',NO,NV)
*DA }
      CALL DACOPD(XY,X)
      CALL DACOPD(X,V)
      CALL DACOND(W,ZERO)
      CALL DANOT(1)
      CALL DAINV(V,NV,W,NV)
      CALL DANOT(NO)
      CALL DACCT(X,NDIM2,W,NV,V,NDIM2)
      CALL DANOT(1)
      CALL DACOPD(XY,X)
      CALL DANOT(NO)
      CALL DACOPD(V,W)
      CALL DACON(H,ZERO)
      DO 333 K=2,NO-1
      CALL TAKED(W,K,V)
      CALL INTD(V,B5,REL)
      CALL DAADD(B5,H,B1)
      CALL DACOP(B1,H)
      KP=K+1
      CALL FEXPO(H,W,V,KP,KP,ONEM,-1)
      CALL DACOPD(V,W)
 333  CONTINUE
      CALL DADAL(B5,1)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE GOFIX(XY,X,V,W,REL,A1,A1I,NORD)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
*****************************************************************
* X = A1 XY A1I WHERE X IS TO THE FIXED POINT TO ORDER NORD     *
*****************************************************************
      PARAMETER (NDIM=3)
      PARAMETER (NDIM2=6)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) XY(NT),X(NT),W(NT),V(NT),REL(NT),A1(NT),A1I(NT)
      INTEGER XY(NT),X(NT),W(NT),V(NT),REL(NT),A1(NT),A1I(NT)
*
      CALL DAALL(XY,NT,'XY        ',NO,NV)
      CALL DAALL(X,NT,'X         ',NO,NV)
      CALL DAALL(W,NT,'W         ',NO,NV)
      CALL DAALL(V,NT,'V         ',NO,NV)
      CALL DAALL(REL,NT,'REL       ',NO,NV)
      CALL DAALL(A1,NT,'A1        ',NO,NV)
      CALL DAALL(A1I,NT,'A1I       ',NO,NV)
*DA }
* COMPUTATION OF A1 AND A1I USING DAINV
      CALL DANOT(NORD)
      CALL DACOPD(XY,X)
      CALL DALIND(X,ONE,REL,ONEM,V)
      CALL DAINV(V,NV,W,NV)
      CALL DACOND(X,ZERO)
      CALL DACCT(W,NDIM2,X,NV,V,NDIM2)
      CALL DALIND(REL,ONE,V,ONE,A1)
      CALL DALIND(REL,ONE,V,ONEM,A1I)
      CALL DANOT(NO)
* X = A1I O XY O A1
      CALL DACCT(A1I,NDIM2,XY,NV,V,NDIM2)
      CALL DACCT(V,NDIM2,A1,NV,X,NDIM2)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE ORDERMAP(H,FT,X,V,W,REL,CJG,CTR,RTC,ROTI)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
*****************************************************************
* ANALYSES THE NON-LINEAR PART X OF THE MAP. THE RESULTING MAP  *
* HAS ITS NON-LINEAR TUNE SHIFTS IN H. (R X = FT^-1 ROT H FT)   *
* H IS FACTORIZED AS FROM LEFT-TO-RIGHT AND THE REVERSE FOR FT. *
*****************************************************************
      PARAMETER (NDIM=3)
      PARAMETER (NDIM2=6)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) X(NT),W(NT),V(NT),REL(NT),CJG(NT),CTR(NT),RTC(NT),H,FT
*DAE{ (NO,NV) ROTI(NT)
*DAI{ (NO,NV) B1,B5,B6,B9
      INTEGER X(NT),W(NT),V(NT),REL(NT),CJG(NT),CTR(NT),RTC(NT),H,FT
      INTEGER ROTI(NT)
      INTEGER B1,B5,B6,B9
*
      SAVE    B1,B5,B6,B9
      PARAMETER
     *(LX 3 = 1 +1 +1 +1 )
      DATA    B1,B5,B6,B9/ LX  3 * 0 /
*
      CALL DAALL(X,NT,'X         ',NO,NV)
      CALL DAALL(W,NT,'W         ',NO,NV)
      CALL DAALL(V,NT,'V         ',NO,NV)
      CALL DAALL(REL,NT,'REL       ',NO,NV)
      CALL DAALL(CJG,NT,'CJG       ',NO,NV)
      CALL DAALL(CTR,NT,'CTR       ',NO,NV)
      CALL DAALL(RTC,NT,'RTC       ',NO,NV)
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(FT,1,'FT        ',NO,NV)
      CALL DAALL(ROTI,NT,'ROTI      ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
      CALL DAALL(B5,1,'B5        ',NO,NV)
      CALL DAALL(B6,1,'B6        ',NO,NV)
      CALL DAALL(B9,1,'B9        ',NO,NV)
*DA }
      CALL DACON(H,ZERO)
      CALL DACON(FT,ZERO)
      DO 33 K=2,NO-1
      KP=K+1
* IF K>2 V = H(K)^-1 X(K)
      CALL FEXPO(H,X,V,3,K,ONEM,-1)
* EXTRACTING K TH DEGREE OF V ----> W
      CALL TAKED(V,K,W)
* W = EXP(B5) + ...
      CALL INTD(W,B5,REL)
* B5 ON EXIT IS THE NEW CONTRIBUTION TO H
* B6 IS THE NEW CONTRIBUTION TO FT
      CALL ANALIE(B5,B6,CJG,CTR,RTC)
      CALL DAADD(B5,H,B1)
      CALL DACOP(B1,H)
* EXP(B9) = EXP( : ROTI B6 :)
      CALL TRX(B6,B9,ROTI)
* V = EXP(-B6) REL
      CALL FEXPO(B6,REL,V,KP,KP,ONEM,1)
* W = V O X
      CALL DACCT(V,NDIM2,X,NV,W,NDIM2)
        WRITE(6,*) ' ORDERMAP K= ', K+1
* X = EXP(B9) W
      CALL FEXPO(B9,W,X,KP,KP,ONE,1)
* B6 IS THE NEW CONTRIBUTION TO FT
      CALL DAADD(B6,FT,B1)
      CALL DACOP(B1,FT)
 33   CONTINUE
      CALL DADAL(B9,1)
      CALL DADAL(B6,1)
      CALL DADAL(B5,1)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE ORDJ0MAP(H,FT,X,V,W,REL,CJG,CTR,RTC,ROTI,IA,IHAM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
*****************************************************************
* ANALYSES THE NON-LINEAR PART X OF THE MAP. THE RESULTING MAP  *
* HAS ITS NON-LINEAR TUNE SHIFTS IN H. (R X = FT^-1 ROT H FT)   *
* H IS FACTORIZED AS FROM LEFT-TO-RIGHT AND THE REVERSE FOR FT. *
*****************************************************************
      PARAMETER (NDIM=3)
      PARAMETER (NDIM2=6)
      PARAMETER (NT=20)
      PARAMETER (NTT=20)
      DIMENSION JX(20),TU(NDIM)
      COMMON /TUNE/ ANGLE(NDIM),ABM(-NTT:NTT,-NTT:NTT,-NTT:NTT)
     @,AAM(-NTT:NTT,-NTT:NTT,-NTT:NTT),TUE(-NTT:NTT,-NTT:NTT,-NTT:NTT)
      COMMON /II/NO,NV
*DAE{ (NO,NV) X(NT),W(NT),V(NT),REL(NT),CJG(NT),CTR(NT),RTC(NT),H,FT
*DAE{ (NO,NV) ROTI(NT)
*DAI{ (NO,NV) B1,B5,B6,B9
      INTEGER X(NT),W(NT),V(NT),REL(NT),CJG(NT),CTR(NT),RTC(NT),H,FT
      INTEGER ROTI(NT)
      INTEGER B1,B5,B6,B9
*
      SAVE    B1,B5,B6,B9
      PARAMETER
     *(LX 3 = 1 +1 +1 +1 )
      DATA    B1,B5,B6,B9/ LX  3 * 0 /
*
      CALL DAALL(X,NT,'X         ',NO,NV)
      CALL DAALL(W,NT,'W         ',NO,NV)
      CALL DAALL(V,NT,'V         ',NO,NV)
      CALL DAALL(REL,NT,'REL       ',NO,NV)
      CALL DAALL(CJG,NT,'CJG       ',NO,NV)
      CALL DAALL(CTR,NT,'CTR       ',NO,NV)
      CALL DAALL(RTC,NT,'RTC       ',NO,NV)
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(FT,1,'FT        ',NO,NV)
      CALL DAALL(ROTI,NT,'ROTI      ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
      CALL DAALL(B5,1,'B5        ',NO,NV)
      CALL DAALL(B6,1,'B6        ',NO,NV)
      CALL DAALL(B9,1,'B9        ',NO,NV)
*DA }
      IET=1
      X2PI=ATAN(ONE)*EIGHT
      CALL DACON(H,ZERO)
      CALL DACON(FT,ZERO)
      DO 33 K=2,NO-1
      KP=K+1
* IF K>2 V = H(K)^-1 X(K)
      CALL FEXPO(H,X,V,3,K,ONEM,-1)
* EXTRACTING K TH DEGREE OF V ----> W
      CALL TAKED(V,K,W)
* W = EXP(B5) + ...
      CALL INTD(W,B5,REL)
* B5 ON EXIT IS THE NEW CONTRIBUTION TO H
* B6 IS THE NEW CONTRIBUTION TO FT
      CALL ANALIE(B5,B6,CJG,CTR,RTC)
      CALL DAADD(B5,H,B1)
      CALL DACOP(B1,H)
* EXP(B9) = EXP( : ROTI B6 :)
      CALL TRX(B6,B9,ROTI)
* V = EXP(-B6) REL
      CALL FEXPO(B6,REL,V,KP,KP,ONEM,1)
* W = V O X
      CALL DACCT(V,NDIM2,X,NV,W,NDIM2)
        WRITE(6,*) ' ORDJ0MAP K= ', K+1
* X = EXP(B9) W
      CALL FEXPO(B9,W,X,KP,KP,ONE,1)
* B6 IS THE NEW CONTRIBUTION TO FT
      CALL DAADD(B6,FT,B1)
      CALL DACOP(B1,FT)
CETIENNE
      IF(1.EQ.MOD(K,2).AND.IET.EQ.1) THEN
      CALL DACOND(V,ZERO)
      CALL DACOP(H,B1)
      CALL CTRBASIS(B1,B5,CTR,CJG)
      COE=-TWO/X2PI
      DO 901 I=1,NDIM
      CALL DADER(2*I-1,B1,B5)
      CALL DATRA(2*I,B5,B6)
      CALL DACMU(B6,COE,V(2*I-1))
 901  CONTINUE
      DO 902 I=1,NDIM
      CALL DACOP(REL(2*I-1),W(2*I-1))
      CALL DACOP(REL(2*I),V(2*I))
      CALL DACON(W(2*I),ONE)
 902  CALL DACON(V(2*I),ZERO)
      DO 903 I=NDIM2+1,NV-1
      CALL DACOP(REL(I),V(I))
 903  CALL DACOP(REL(I),W(I))
      CALL DACON(W(NV),ONE)
      CALL DACOP(REL(NV),V(NV))
      CALL DACCT(V,NDIM2,W,NV,ROTI,NDIM2)
      DO 904 I=1,NDIM
      CALL DAPEK(ROTI(2*I-1),JX,TU(I))
      CALL DACON(W(2*I-1),-TU(I))
      CALL DACOP(REL(2*I),ROTI(2*I))
 904  CALL DAPOK(ROTI(2*I-1),JX,ZERO)
      DO 905 I=NDIM2+1,NV
 905  CALL DACOP(REL(I),ROTI(I))
      CALL DAINV(ROTI,NV,V,NV)
      CALL DACCT(V,NDIM2,W,NV,ROTI,NDIM2)
      DO 906 I=1,NDIM
      CALL DAPEK(ROTI(2*I-1),JX,TU(I))
      WRITE(6,*) ' ACTION, POSITION AND TUNE IN DIM = ',I
      WRITE(6,*) TU(I)/TWO,SQRT(ABS(TU(I))),ANGLE(I)/X2PI
 906  CONTINUE
      DO 907 I=1,NV
 907  CALL DAVAR(ROTI(I),ZERO,I)
      CALL ROTATION
      ENDIF
      IF(KP.LT.NO) THEN
      WRITE(6,*) ' DO YOU WANT A CHANGE OF TUNES ?'
      READ(5,*) ICH
      IF(ICH.EQ.-1) IET=0
      IF(ICH.EQ.1) THEN
      WRITE(6,*) '  TUNES ? '
      READ(5,*) (TU(I),I=1,NDIM)
      CALL DACON(B1,ZERO)
      DO 345 I=1,NDIM
      JX(NV)=IA
      JX(2*I-1)=2
      RR=-(-TU(I)*X2PI+ANGLE(I))/TWO
      CALL DAPOK(B1,JX,RR)
      JX(2*I-1)=0
      JX(2*I)=2
      CALL DAPOK(B1,JX,RR)
      JX(NV)=0
 345  JX(2*I)=0
      CALL DAADD(B1,H,B6)
      CALL DACOP(B6,H)
      DO 908 I=1,NDIM
 908  ANGLE(I)=TU(I)*X2PI
      CALL FEXPO(B1,X,W,IA+2,NO,ONE,1)
      CALL DACOPD(W,X)
      DO 909 I=1,NV
 909  CALL DAVAR(ROTI(I),ZERO,I)
      CALL ROTATION
      CALL AMBM(NO,IHAM)
      ENDIF
      ENDIF
CETIENNE
 33   CONTINUE
      CALL DADAL(B9,1)
      CALL DADAL(B6,1)
      CALL DADAL(B5,1)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE ORDERHAM(H,FT,CJG,CTR,RTC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
*****************************************************************
* NORMALIZES THE PSEUDO-HAMILTONIAN H. ON EXIT H IS THE         *
* NORMALIZED HAMILTONIAN                                        *
*****************************************************************
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) CJG(NT),CTR(NT),RTC(NT),H,FT
*DAI{ (NO,NV) B1,B5,B6,B9
      INTEGER CJG(NT),CTR(NT),RTC(NT),H,FT
      INTEGER B1,B5,B6,B9
*
      SAVE    B1,B5,B6,B9
      PARAMETER
     *(LX 2 = 1 +1 +1 +1 )
      DATA    B1,B5,B6,B9/ LX  2 * 0 /
*
      CALL DAALL(CJG,NT,'CJG       ',NO,NV)
      CALL DAALL(CTR,NT,'CTR       ',NO,NV)
      CALL DAALL(RTC,NT,'RTC       ',NO,NV)
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(FT,1,'FT        ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
      CALL DAALL(B5,1,'B5        ',NO,NV)
      CALL DAALL(B6,1,'B6        ',NO,NV)
      CALL DAALL(B9,1,'B9        ',NO,NV)
*DA }
      CALL DACON(FT,ZERO)
      CALL DACOP(H,B5)
      CALL TAKE(B5,2,H)
      DO 33 KP=3,NO
      CALL TAKE(B5,KP,B6)
      CALL ANALIE(B6,B9,CJG,CTR,RTC)
      WRITE(6,*) ' ORDERHAM K = ',KP
      NON=NO
      CALL LIE(B9,B5,B6,KP,NON)
      CALL DACOP(B6,B5)
      CALL DAADD(B9,FT,B1)
      CALL DACOP(B1,FT)
 33   CONTINUE
      CALL DACOP(B5,H)
      CALL DADAL(B9,1)
      CALL DADAL(B6,1)
      CALL DADAL(B5,1)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE ANALIE(H,FT,CJG,CTR,RTC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
*****************************************************************
* INCOMING LIE EXPONENT H IS NORMALIZED INTO H BY THE CANONICAL *
* TRANSFORMATION EXP(FT)                                        *
*****************************************************************
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) CJG(NT),CTR(NT),RTC(NT),H,FT
*DAI{ (NO,NV) B1,B2,BM,B4
      INTEGER CJG(NT),CTR(NT),RTC(NT),H,FT
      INTEGER B1,B2,BM,B4
*
      SAVE    B1,B2,BM,B4
      PARAMETER
     *(LX 2 = 1 +1 +1 +1 )
      DATA    B1,B2,BM,B4/ LX  2 * 0 /
*
      CALL DAALL(CJG,NT,'CJG       ',NO,NV)
      CALL DAALL(CTR,NT,'CTR       ',NO,NV)
      CALL DAALL(RTC,NT,'RTC       ',NO,NV)
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(FT,1,'FT        ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
      CALL DAALL(B2,1,'B2        ',NO,NV)
      CALL DAALL(BM,1,'BM        ',NO,NV)
      CALL DAALL(B4,1,'B4        ',NO,NV)
*DA }
* MASSAGING THE STABLE PLANE IN CPART. B1 = DACFU(H)
      CALL CPART(H,B1)
* BM = B1 O CTR
      CALL TRX(B1,BM,CTR)
* BM = CONTRIBUTION TO H  (NOT YET IN PROPER BASIS)
* B4 = CONTRIBUTION TO FT (NOT YET IN PROPER BASIS)
      CALL RESB(BM,B4,CJG)
* CHANGING BASIS
      CALL TRX(BM,B1,RTC)
      CALL TRX(B4,B2,RTC)
* MASSAGING BACK CPART IS AN INVOLUTION
      CALL CPART(B1,H)
      CALL CPART(B2,FT)
      CALL DADAL(B4,1)
      CALL DADAL(BM,1)
      CALL DADAL(B2,1)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE SHIFT(H,X,M)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      COMMON /II/NO,NV
*DAE{ (NO,NV) H,X
*DAI{ (NO,NV) B1
      INTEGER H,X
      INTEGER B1
*
      SAVE    B1
      PARAMETER
     *(LX 2 = 1 )
      DATA    B1/ LX  2 * 0 /
*
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(X,1,'X         ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
*DA }
      CALL DADER(M,H,B1)
      CALL DACMU(B1,ONEM,X)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE LIE(H,X,Y,M,NON)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      COMMON /II/NO,NV
*DAE{ (NO,NV) H,X,Y
*DAI{ (NO,NV) B1,B2,B3,B4
      INTEGER H,X,Y
      INTEGER B1,B2,B3,B4
*
      SAVE    B1,B2,B3,B4
      PARAMETER
     *(LX 2 = 1 +1 +1 +1 )
      DATA    B1,B2,B3,B4/ LX  2 * 0 /
*
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(X,1,'X         ',NO,NV)
      CALL DAALL(Y,1,'Y         ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
      CALL DAALL(B2,1,'B2        ',NO,NV)
      CALL DAALL(B3,1,'B3        ',NO,NV)
      CALL DAALL(B4,1,'B4        ',NO,NV)
*DA }
      MAX=INT(DBLE(NON-2)/DBLE(M-2)+C1M10)
      CALL DACOP(X,B4)
      CALL DACOP(X,B1)
      DO 1 I=1,MAX
      COE=ONE/I
      CALL DACMU(B1,COE,B2)
      CALL DAPOI(H,B2,B1,NDIM)
      CALL DAADD(B4,B1,B3)
      CALL DACOP(B3,B4)
 1    CONTINUE
      CALL DACOP(B3,Y)
      CALL DADAL(B4,1)
      CALL DADAL(B3,1)
      CALL DADAL(B2,1)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE FEXPO(H,X,V,NRMIN,NRMAX,SCA,IFAC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
*****************************************************************
* MORE OR LESS V = EXP(:H:) X ; SEE BELOW                       *
*****************************************************************
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) X(NT),V(NT),H
*DAI{ (NO,NV) BM,B0
      INTEGER X(NT),V(NT),H
      INTEGER BM,B0
*
      SAVE    BM,B0
      PARAMETER
     *(LX 2 = 1 +1 )
      DATA    BM,B0/ LX  2 * 0 /
*
      CALL DAALL(X,NT,'X         ',NO,NV)
      CALL DAALL(V,NT,'V         ',NO,NV)
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(BM,1,'BM        ',NO,NV)
      CALL DAALL(B0,1,'B0        ',NO,NV)
*DA }
      DO 2 I=1,2*NDIM
 2    CALL DACOP(X(I),V(I))
  
* V = X IF NRMAX = 2
      IF(NRMAX.EQ.2) THEN
      CALL DADAL(B0,1)
      CALL DADAL(BM,1)
            RETURN
       ENDIF
*
      IF(IFAC.EQ.100) GOTO 100
* IFAC =1 ---> V = EXP(:SCA*H(NRMAX):)...EXP(:SCA*H(NRMIN):)X
      IF(IFAC.EQ.1) THEN
         DO 1 I=NRMAX,NRMIN,-1
         CALL TAKE(H,I,B0)
         CALL DACMU(B0,SCA,BM)
         DO 3 J=1,2*NDIM
      NON=NO
         CALL LIE(BM,V(J),B0,I,NON)
 3       CALL DACOP(B0,V(J))
 1       CONTINUE
      ELSE
* IFAC =-1 ---> V = EXP(:SCA*H(NRMIN):)...EXP(:SCA*H(NRMAX):)X
      DO 11 I=NRMIN,NRMAX
      CALL TAKE(H,I,B0)
      CALL DACMU(B0,SCA,BM)
      DO 33 J=1,2*NDIM
      NON=NO
      CALL LIE(BM,V(J),B0,I,NON)
 33   CALL DACOP(B0,V(J))
 11   CONTINUE
      ENDIF
      CALL DADAL(B0,1)
      CALL DADAL(BM,1)
      RETURN
* IFAC =100 ---> V = EXP(:SCA*H:) X
 100  CALL DACMU(H,SCA,BM)
      DO 333 J=1,2*NDIM
      NON=NO
      CALL LIE(BM,V(J),B0,NRMIN,NON)
 333  CALL DACOP(B0,V(J))
      CALL DADAL(B0,1)
      CALL DADAL(BM,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE EXBERZ(H,X,V,NRMAX,SCA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) X(NT),V(NT),H
*DAI{ (NO,NV) BM,B0
      INTEGER X(NT),V(NT),H
      INTEGER BM,B0
*
      SAVE    BM,B0
      PARAMETER
     *(LX 2 = 1 +1 )
      DATA    BM,B0/ LX  2 * 0 /
*
      CALL DAALL(X,NT,'X         ',NO,NV)
      CALL DAALL(V,NT,'V         ',NO,NV)
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(BM,1,'BM        ',NO,NV)
      CALL DAALL(B0,1,'B0        ',NO,NV)
*DA }
      NR2=NRMAX+2
      DO 2 I=1,2*NDIM
 2    CALL DACOP(X(I),V(I))
 100  CALL DACMU(H,SCA,BM)
      DO 333 J=1,2*NDIM
      CALL LIE(BM,V(J),B0,3,NR2)
 333  CALL DACOP(B0,V(J))
      CALL DADAL(B0,1)
      CALL DADAL(BM,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE TAKE(H,M,HT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      COMMON /II/NO,NV
*DAE{ (NO,NV) H,HT
*DAI{ (NO,NV) B1,B2
      INTEGER H,HT
      INTEGER B1,B2
*
      SAVE    B1,B2
      PARAMETER
     *(LX 2 = 1 +1 )
      DATA    B1,B2/ LX  2 * 0 /
*
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(HT,1,'HT        ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
      CALL DAALL(B2,1,'B2        ',NO,NV)
*DA }
      CALL DANOT(M)
      CALL DACOP(H,B1)
      CALL DANOT(M-1)
      CALL DACOP(B1,B2)
      CALL DANOT(NO)
      CALL DASUB(B1,B2,HT)
      CALL DADAL(B2,1)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE TAKED(H,M,HT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) H(NT),HT(NT)
*DAI{ (NO,NV) B1,B2
      INTEGER H(NT),HT(NT)
      INTEGER B1,B2
*
      SAVE    B1,B2
      PARAMETER
     *(LX 2 = 1 +1 )
      DATA    B1,B2/ LX  2 * 0 /
*
      CALL DAALL(H,NT,'H         ',NO,NV)
      CALL DAALL(HT,NT,'HT        ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
      CALL DAALL(B2,1,'B2        ',NO,NV)
*DA }
      DO 1 I=1,2*NDIM
      CALL DANOT(M)
      CALL DACOP(H(I),B1)
      CALL DANOT(M-1)
      CALL DACOP(B1,B2)
      CALL DANOT(NO)
 1    CALL DASUB(B1,B2,HT(I))
      CALL DADAL(B2,1)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE DACOPD(H,HT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NT=20)
      PARAMETER (NDIM=3)
      COMMON /II/NO,NV
*DAE{ (NO,NV) H(NT),HT(NT)
      INTEGER H(NT),HT(NT)
*
      CALL DAALL(H,NT,'H         ',NO,NV)
      CALL DAALL(HT,NT,'HT        ',NO,NV)
*DA }
      DO 1 I=1,NDIM*2
 1    CALL DACOP(H(I),HT(I))
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE DALIND(H,RH,HT,RT,HR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) H(NT),HT(NT),HR(NT)
      INTEGER H(NT),HT(NT),HR(NT)
*
      CALL DAALL(H,NT,'H         ',NO,NV)
      CALL DAALL(HT,NT,'HT        ',NO,NV)
      CALL DAALL(HR,NT,'HR        ',NO,NV)
*DA }
      DO 1 I=1,NDIM*2
 1    CALL DALIN(H(I),RH,HT(I),RT,HR(I))
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE DAPRID(H,K)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) H(NT)
      INTEGER H(NT)
*
      CALL DAALL(H,NT,'H         ',NO,NV)
*DA }
      DO 1 I=1,NDIM*2
 1    CALL DAPRI(H(I),K)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE DACOND(H,R)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
*DAE{ (NO,NV) H(NT)
      INTEGER H(NT)
*
      CALL DAALL(H,NT,'H         ',NO,NV)
*DA }
      DO 1 I=1,NDIM*2
 1    CALL DACON(H(I),R)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE INTD(V,H,X)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      PARAMETER (NT=20)
      COMMON /II/NO,NV
      EXTERNAL DLIE
*DAE{ (NO,NV) V(NT),X(NT),H
*DAI{ (NO,NV) B1,B2,B3,B4
      INTEGER V(NT),X(NT),H
      INTEGER B1,B2,B3,B4
*
      SAVE    B1,B2,B3,B4
      PARAMETER
     *(LX 2 = 1 +1 +1 +1 )
      DATA    B1,B2,B3,B4/ LX  2 * 0 /
*
      CALL DAALL(V,NT,'V         ',NO,NV)
      CALL DAALL(X,NT,'X         ',NO,NV)
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(B1,1,'B1        ',NO,NV)
      CALL DAALL(B2,1,'B2        ',NO,NV)
      CALL DAALL(B3,1,'B3        ',NO,NV)
      CALL DAALL(B4,1,'B4        ',NO,NV)
*DA }
      CALL DACON(B4,ZERO)
      CALL DACON(H,ZERO)
      DO 1 I=1,NDIM
      CALL DACFU(V(2*I-1),DLIE,B3)
      CALL DACFU(V(2*I),DLIE,B1)
      CALL DAMUL(B1,X(2*I-1),B2)
      CALL DAMUL(B3,X(2*I),B1)
      CALL DASUB(B2,B1,B3)
      CALL DAADD(B3,B4,B2)
      CALL DACOP(B2,B4)
 1    CONTINUE
      CALL DACOP(B4,H)
      CALL DADAL(B4,1)
      CALL DADAL(B3,1)
      CALL DADAL(B2,1)
      CALL DADAL(B1,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE TRX(H,RH,VTR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NT=20)
      PARAMETER (NDIM=3)
      COMMON /II/NO,NV
*DAE{ (NO,NV) H,RH,VTR(NT)
      INTEGER H,RH,VTR(NT)
*
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(RH,1,'RH        ',NO,NV)
      CALL DAALL(VTR,NT,'VTR       ',NO,NV)
*DA }
      CALL DACCT(H,1,VTR,NV,RH,1)
      RETURN
      END
C ANFANG UNTERPROGRAMM
      SUBROUTINE CPART(H,CH)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      EXTERNAL REXT
      COMMON /II/NO,NV
*DAE{ (NO,NV) H,CH
      INTEGER H,CH
*
      CALL DAALL(H,1,'H         ',NO,NV)
      CALL DAALL(CH,1,'CH        ',NO,NV)
*DA }
      CALL DACFU(H,REXT,CH)
      RETURN
      END
      FUNCTION DLIE(J)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      INTEGER J(20)
      DLIE=ZERO
      DO 1 I=1,NDIM
 1    DLIE=J(2*I-1)+J(2*I)+DLIE
      DLIE=DLIE+ONE
      DLIE=ONE/DLIE
      RETURN
      END
      FUNCTION GBM(J)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NT=20)
      PARAMETER (NTT=20)
      PARAMETER (NDIM=3)
      COMMON /TUNE/ ANGLE(NDIM),ABM(-NTT:NTT,-NTT:NTT,-NTT:NTT)
     @,AAM(-NTT:NTT,-NTT:NTT,-NTT:NTT),TUE(-NTT:NTT,-NTT:NTT,-NTT:NTT)
      INTEGER J(20),JJ(NDIM)
      GBM=ZERO
      DO 1 I=1,NDIM
 1    JJ(I)=J(2*I-1)-J(2*I)
      GBM=ABM(JJ(1),JJ(2),JJ(3))
      RETURN
      END
      FUNCTION GAM(J)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NT=20)
      PARAMETER (NTT=20)
      PARAMETER (NDIM=3)
      COMMON /TUNE/ ANGLE(NDIM),ABM(-NTT:NTT,-NTT:NTT,-NTT:NTT)
     @,AAM(-NTT:NTT,-NTT:NTT,-NTT:NTT),TUE(-NTT:NTT,-NTT:NTT,-NTT:NTT)
      INTEGER J(20),JJ(NDIM)
      GAM=ZERO
      DO 1 I=1,NDIM
 1    JJ(I)=J(2*I-1)-J(2*I)
      GAM=AAM(JJ(1),JJ(2),JJ(3))
      RETURN
      END
      FUNCTION TUER(J)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NT=20)
      PARAMETER (NTT=20)
      PARAMETER (NDIM=3)
      COMMON /TUNE/ ANGLE(NDIM),ABM(-NTT:NTT,-NTT:NTT,-NTT:NTT)
     @,AAM(-NTT:NTT,-NTT:NTT,-NTT:NTT),TUE(-NTT:NTT,-NTT:NTT,-NTT:NTT)
      INTEGER J(20),JJ(NDIM)
      TUER=ZERO
      DO 1 I=1,NDIM
 1    JJ(I)=J(2*I-1)-J(2*I)
      TUER=TUE(JJ(1),JJ(2),JJ(3))
      RETURN
      END
      FUNCTION RESL(J)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NT=20)
      PARAMETER (NTT=20)
      PARAMETER (NDIM=3)
      INTEGER J(20)
      RESL=ZERO
      DO 2 I=1,NDIM
      IF(J(2*I-1).GT.J(2*I)) THEN
         GOTO 3
        ELSE
      IF(J(2*I-1).LT.J(2*I)) GOTO 22
      ENDIF
 2    CONTINUE
      RESL=ONE
      GOTO 22
 3    RESL=ONE
 22   RETURN
      END
      FUNCTION REXT(J)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NDIM=3)
      COMMON /ISTABLE/ISTA(NDIM),IDSTA(NDIM)
      INTEGER J(20)
      LIE=0
      DO 1 I=1,NDIM
 1    LIE=ISTA(I)*J(2*I)+LIE
      MO=MOD(LIE,4)+1
      GOTO(11,12,13,14),MO
 11   REXT = ONE
      RETURN
 12   REXT = -ONE
      RETURN
 13   REXT = -ONE
      RETURN
 14   REXT = ONE
      RETURN
      END
CXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
C ANFANG UNTERPROGRAMM
      SUBROUTINE MIDBLOCK(C,A2,A2I,Q)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
      PARAMETER (NT=20)
      PARAMETER (NDIM2=6)
      PARAMETER (NDIM=3)
      INTEGER JX(20)
C      CHARACTER*10 C(*),A2(*),A2I(*)
      DIMENSION CR(NDIM2,NDIM2),XJ(NDIM2,NDIM2),Q(*)
      DIMENSION RR(NDIM2),RI(NDIM2),SA(NDIM2,NDIM2)
     @,SAI(NDIM2,NDIM2),CM(NDIM2,NDIM2),W(NDIM2,NDIM2)
      DIMENSION VR(NDIM2,NDIM2),VI(NDIM2,NDIM2),S1(NDIM2,NDIM2),P(NDIM)
*DAE{ (NO,NV) C(NT),A2(NT),A2I(NT)
      INTEGER C(NT),A2(NT),A2I(NT)
*
      CALL DAALL(C,NT,'C         ',NO,NV)
      CALL DAALL(A2,NT,'A2        ',NO,NV)
      CALL DAALL(A2I,NT,'A2I       ',NO,NV)
*DA }
      X2PI=ATAN(ONE)*EIGHT
      N1=0
      DO 22 I=1,NT
 22   JX(I)=0
      DO 1 I=1,NDIM2
      DO 2 J=1,NDIM2
      JX(J)=1
      CALL  DAPEK(C(I),JX,R)
      JX(J)=0
      CM(I,J)=R
      CR(J,I)=R
      XJ(I,J)=ZERO
      S1(I,J)=ZERO
 2    CONTINUE
 1    CONTINUE
      DO 333 I=1,NDIM
      XJ(2*I-1,2*I)=ONE
      XJ(2*I,2*I-1)=-ONE
 333  CONTINUE
      DO 33 I=1,NDIM2
      DO 34 J=1,NDIM2
      SAI(I,J)=ZERO
      W(I,J)=CM(I,J)
      SA(I,J)=ZERO
 34   CONTINUE
 33   CONTINUE
      CALL MUL6(XJ,W)
      CALL MUL6(CR,W)
      WRITE(6,*)'CHECK OF THE SYMPLECTIC CONDITION ON THE LINEAR PART'
      DO 991 I=1,NDIM2
      WRITE(6,*) (W(I,J),J=1,NDIM2)
 991  CONTINUE
      CALL EIG6(CR,RR,RI,VR,VI)
      DO 3 I=1,NDIM2
 3    WRITE(6,*) I,ASIN(RI(I))/X2PI
      WRITE(6,*) ' ORDER THE EIGENPLANES, WRITE N,NN,NNN '
      I9=6
      IF(I9.EQ.6) READ(5,*) N,NN,N1
      X=VR(1,N)*VI(2,N)-VR(2,N)*VI(1,N)+VR(3,N)*VI(4,N)-VR(4,N)*VI(3,N)
       IF(I9.EQ.6) X=X+VR(5,N)*VI(6,N)-VR(6,N)*VI(5,N)
      Y=VR(1,NN)*VI(2,NN)-VR(2,NN)*VI(1,NN)+VR(3,NN)*VI(4,NN)-VR(4,NN)
     &*VI(3,NN)
       IF(I9.EQ.6)Y=Y+VR(5,NN)*VI(6,NN)-VR(6,NN)*VI(5,NN)
       IF(I9.EQ.6) THEN
       Z=VR(1,N1)*VI(2,N1)-VR(2,N1)*VI(1,N1)+VR(3,N1)*VI(4,N1)-VR(4,N1)
     &*VI(3,N1)+VR(5,N1)*VI(6,N1)-VR(6,N1)*VI(5,N1)
       ENDIF
      XX=ONE
      YY=ONE
      ZZ=ONE
      IF(X.LT.ZERO) XX=-ONE
      IF(Y.LT.ZERO) YY=-ONE
      IF(Z.LT.ZERO) ZZ=-ONE
      X=SQRT(ABS(X))
      Y=SQRT(ABS(Y))
      Z=SQRT(ABS(Z))
      DO 11 I=1,NDIM2
      SAI(1,I)=VR(I,N)*XX/X
      SAI(2,I)=VI(I,N)/X
      SAI(3,I)=VR(I,NN)*YY/Y
      SAI(4,I)=VI(I,NN)/Y
CFRS   IF(I9.EQ.6) THEN
          SAI(5,I)=VR(I,N1)*ZZ/Z
          SAI(6,I)=VI(I,N1)/Z
CFRS   ELSE
CFRS      SAI(5,5)=ONE
CFRS      SAI(6,6)=ONE
CFRS   ENDIF
 11   CONTINUE
C ADJUST SA SUCH THAT SA(1,2)=0 AND SA(3,4)=0. (COURANT-SNYDER-EDWARDS-TENG
C PHASE ADVANCES)
      DO 88 I=1,NDIM
      P(I)=ATAN(-SAI(2*I-1,2*I)/SAI(2*I,2*I))
      S1(2*I-1,2*I-1)=COS(P(I))
      S1(2*I,2*I)=COS(P(I))
      S1(2*I-1,2*I)=SIN(P(I))
 88   S1(2*I,2*I-1)=-SIN(P(I))
      CALL MUL6(S1,SAI)
C ADJUST SA TO HAVE SA(1,1)>0 AND SA(3,3)>0 ROTATE BY PI IF NECESSARY.
      XD=ONE
      YD=ONE
      ZD=ONE
      IF(SAI(1,1).LT.ZERO) XD=-ONE
      IF(SAI(3,3).LT.ZERO) YD=-ONE
       IF(SAI(5,5).LT.ZERO) ZD=-ONE
      S1(1,1)=XD
      S1(1,2)=ZERO
      S1(2,1)=ZERO
      S1(2,2)=XD
      S1(3,3)=YD
      S1(3,4)=ZERO
      S1(4,3)=ZERO
      S1(4,4)=YD
       S1(5,5)=ZD
       S1(5,6)=ZERO
       S1(6,5)=ZERO
       S1(6,6)=ZD
      CALL MUL6(S1,SAI)
C SA IS NOW UNIQUELY AND UNAMBIGEOUSLY DETERMINED.
      DO 12 I=1,NDIM2
      DO 13 J=1,NDIM2
      DO 14 K=1,NDIM2
      DO 15 L=1,NDIM2
      SA(I,L)=-XJ(I,J)*SAI(K,J)*XJ(K,L)+SA(I,L)
 15   CONTINUE
 14   CONTINUE
 13   CONTINUE
 12   CONTINUE
      CALL MUL6(SAI,CM)
      DO 123 I=1,NDIM2
      DO 124 J=1,NDIM2
 124  CR(I,J)=SA(I,J)
 123  CONTINUE
      CALL MUL6(CM,CR)
      DO 444 I=1,NDIM
      Q(I)=ACOS(CR(2*I-1,2*I-1))!/X2PI
      IF(CR(2*I-1,2*I).LT.ZERO) Q(I)=X2PI-Q(I)
 444  CONTINUE
      CALL DACOND(A2,ZERO)
      CALL DACOND(A2I,ZERO)
      DO 10 I=1,NDIM2
      DO 20 J=1,NDIM2
      JX(J)=1
      R=SA(I,J)
      IF(R.NE.ZERO)CALL  DAPOK(A2(I),JX,R)
      JX(J)=1
      R=SAI(I,J)
      IF(R.NE.ZERO)CALL  DAPOK(A2I(I),JX,R)
      JX(J)=0
 20    CONTINUE
 10    CONTINUE
      RETURN
      END
********************************************************************
C
C ANFANG UNTERPROGRAMM
      SUBROUTINE EIG6(FM,REVAL,AIEVAL,REVEC,AIEVEC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
C  THIS ROUTINE FINDS THE EIGENVALUES AND EIGENVECTORS
C  OF THE FULL MATRIX FM.
C  THE EIGENVECTORS ARE NORMALIZED SO THAT THE REAL AND
C  IMAGINARY PART OF VECTORS 1, 3, AND 5 HAVE +1 ANTISYMMETRIC
C  PRODUCT:
C      REVEC1 J AIVEC1 = 1 ; REVEC3 J AIVEC3 = 1 ;
C      REVEC5 J AIVEC5 = 1.
C  THE EIGENVECTORS 2 ,4, AND 6 HAVE THE OPPOSITE NORMALIZATION.
C  WRITTEN BY F. NERI, FEB 26 1986.
C
      PARAMETER (NDIM2=6)
      INTEGER NN
      INTEGER NNR,ILO,IHI,MDIM,INFO
      DOUBLE PRECISION REVAL(NDIM2),AIEVAL(NDIM2),
     @REVEC(NDIM2,NDIM2),AIEVEC(NDIM2,NDIM2)
      DOUBLE PRECISION FM(NDIM2,NDIM2),AA(NDIM2,NDIM2)
      INTEGER I,I1,J
      DOUBLE PRECISION ORT(NDIM2),VV(NDIM2,NDIM2)
      DOUBLE PRECISION PBKT(NDIM2)
C  COPY MATRIX TO TEMPORARY STORAGE (THE MATRIX AA IS DESTROYED)
      DO 600 I=1,NDIM2
        DO 600 I1=1,NDIM2
          AA(I1,I) = FM(I1,I)
  600 CONTINUE
      ILO = 1
      IHI = NDIM2
      MDIM = NDIM2
      NN = NDIM2
C  COMPUTE EIGENVALUES AND EIGENVECTORS USING DOUBLE
C  PRECISION EISPACK ROUTINES:
      CALL ETY(MDIM,NN,ILO,IHI,AA,ORT)
      CALL ETYT(MDIM,NN,ILO,IHI,AA,ORT,VV)
      CALL ETY2(MDIM,NN,ILO,IHI,AA,REVAL,AIEVAL,VV,INFO)
      IF ( INFO .NE. 0 ) THEN
        WRITE(6,*) '  ERROR IN EIG6'
        RETURN
      ENDIF
C      CALL NEIGV(VV,PBKT)
      DO 111 I=1,NDIM2/2
      DO 222 JET=1,NDIM2
      REVEC(JET,2*I-1)=VV(JET,2*I-1)
      REVEC(JET,2*I)=VV(JET,2*I-1)
      AIEVEC(JET,2*I-1)=VV(JET,2*I)
 222  AIEVEC(JET,2*I)=-VV(JET,2*I)
 111  CONTINUE
      DO 900 I=1,NDIM2
        IF(ABS(REVAL(I)**2+AIEVAL(I)**2 -ONE).GT.C1M10) THEN
          WRITE(6,*) ' EIG6: EIGENVALUES OFF THE UNIT CIRCLE!'
          RETURN
        ENDIF
  900 CONTINUE
      RETURN
      END
CXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        SUBROUTINE MUL6(RT,R)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PIENI=1D-17)
      PARAMETER(ZERO=0.0D0,HALF=5.0D-1,ONE=1.0D0)
      PARAMETER(HALFM=-5.0D-1,ONEM=-1.0D0)
      PARAMETER(TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(C1E3=1.0D3,C2E3=2.0D3,C4E3=4.0D3,C1E4=1.0D4)
      PARAMETER(C1E12=1.0D12,C1E13=1.0D13,C1E15=1.0D15,C1E16=1.0D16)
      PARAMETER(C1M1=1.0D-1,C1M3=1.0D-3,C1M6=1.0D-6,C1M7=1.0D-7)
      PARAMETER(C1M8=1.0D-8,C1M9=1.0D-9,C1M10=1.0D-10)
      PARAMETER(C1M12=1.0D-12,C1M13=1.0D-13,C1M14=1.0D-14)
      PARAMETER(C1M15=1.0D-15,C1M17=1.0D-17,C1M18=1.0D-18)
      PARAMETER(C1M21=1.0D-21,C1M24=1.0D-24,C1M38=1.0D-38)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0,SEVEN=7.0D0,EIGHT=8.0D0)
      PARAMETER(NINE=9.0D0,TEN=10.0D0)
      PARAMETER(C24E0=24.0D0,C120E0=120.0D0,C16E0=16.0D0,C40E0=40.0D0)
      PARAMETER(C80E0=80.0D0,C72E0=72.0D0)
      PARAMETER(C12E0=12.0D0,C32E0=32.0D0,C48E0=48.0D0,C160E0=160.0D0)
      PARAMETER(ISZ=200)
        PARAMETER (NDIM2=6)
        PARAMETER (NDIM=3)
        DIMENSION RT(NDIM2,NDIM2),R(NDIM2,NDIM2),RTT(NDIM2,NDIM2)
        DO 11 I=1,NDIM2
        DO 12 J=1,NDIM2
 12     RTT(I,J)=ZERO
 11     CONTINUE
        DO 1 I=1,NDIM2
        DO 2 J=1,NDIM2
        DO 3 IA=1,NDIM2
        RTT(I,IA)=RT(I,J)*R(J,IA)+RTT(I,IA)
 3      CONTINUE
 2      CONTINUE
 1      CONTINUE
  
        DO 444 I=1,NDIM2
        DO 555 J=1,NDIM2
        R(I,J)=RTT(I,J)
 555    CONTINUE
 444    CONTINUE
        RETURN
        END
