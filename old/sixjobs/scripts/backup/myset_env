#!/bin/sh
# This script is called to set up, modify, or check the 
# environment or to create a new study, or to undelete it. 
# It can just be called for checking/updating  e.g. set_env
# or it can be called with an argument "LHCDescrip" in order
# to switch studies and update sixjobs, or to create, a new study.
# It basically imitates dot_env.
# It locks the workspace.
export sixdeskhostname=`hostname`
export sixdeskname=`basename $0`
export sixdeskroot=`basename $PWD`
export sixdeskwhere=`dirname $PWD`
# Set up some temporary values until we execute sixdeskenv/sysenv
# Don't issue lock/unlock debug text (use 2 for that)
export sixdesklogdir=""
export sixdesklevel=1
export sixdeskhome="."
export sixdeskecho="yes!"
if test "$sixdeskroot" != "sixjobs"
then
  echo "This script must be run in the directory sixjobs!!!"
  exit 1
fi
if test ! -s dot_profile
then
  echo "dot_profile is missing!!!"
  exit 1
fi
. ./dot_profile
# and make sure we have a studies directory!
if test ! -d studies
then
  mymess "There is no studies directory in sixjobs!!!"
  myexit 1
fi
cworkspace=`basename $sixdeskwhere`
aline=`egrep "^ *export *workspace=" sixdeskenv | tail -1`
workspace=`echo "$aline" | sed -e 's/\(.*=\)\([^ ]*\)\(.*\)/\2/'`
if test "$workspace" != "$cworkspace"
then
  mymess 0 "Workspace mismatch /$workspace/$cworkspace/!!!"
  mymess 0 "Check the workspace definition in sixdeskenv."
  myexit 2
fi
# and lock the workspace
mylock
# Get the LHCDescrip defined in the local sixdeskenv
aline=`egrep "^ *export *LHCDescrip=" sixdeskenv | tail -1`
LHCDescrip=`echo "$aline" | sed -e 's/\(.*=\)\([^ ]*\)\(.*\)/\2/'`
# We have three possibilities (or an error!)
NEW=""
SWITCH=""
UPDATE=""
# Now check for optional parameter $1 and set
# it as newLHCDescrip
newLHCDescrip=""
if test $# -gt 1
then
  mymess 0 "Only one parameter is allowed by set_env, an LHCDescrip!!!"
  myexit 2
fi
if test $# -ne 0 
then
  # we have a study
  export newLHCDescrip=$1
  if test "$newLHCDescrip" = "$LHCDescrip"
  then
    # we have a match (same as NO newLHCDescrip)
    if test -d studies/$newLHCDescrip
    then
      # in studies already, UPDATE
      UPDATE="true"
    else
      # matches but must be NEW
      NEW="true"
    fi
  else
    # no match a different study
    if test -d studies/$newLHCDescrip 
    then
      # We are switching to an existing study
      SWITCH="true"
    else
      # Must be an error (maybe a typo!)
      mymess 0 "The study /$newLHCDescrip/ does not exist!!!"
      mymess 0 "The sixdeskenv LHCDescrip /$LHCDescrip/ does not correspond!!!"
      myexit 3
    fi
  fi
else
  # No study specified so just UPDATE or NEW
  if test -d studies/"$LHCDescrip"
  then
    # Just update
    UPDATE="true"
  else
    NEW="true"
    newLHCDescrip=$LHCDescrip
  fi 
fi
# and lock studies to ensure integrity of the env files
mylock studies
#
if test "$SWITCH" != ""
then
  # We are switching to newLHCDescrip
  mymess 0 "Switching to study $newLHCDescrip"
  aline=`egrep "^ *export *LHCDescrip=" studies/$newLHCDescrip/sixdeskenv | tail -1`
  studyLHCDescrip=`echo "$aline" | sed -e 's/\(.*=\)\([^ ]*\)\(.*\)/\2/'`
  if test "$studyLHCDescrip" = ""
  then
    mymess 0 "Couldn't find an LHCDescrip in studies/$newLHCDescrip/sixdeskenv!!!"
    myunlock studies
    myunlock
    myexit 2
  fi
  if test "$studyLHCDescrip" != "$newLHCDescrip"
  then
    mymess 0 "BUG!!! Study mismatch for /$newLHCDescrip/$studyLHCDescrip/"
    myunlock studies
    myunlock
    myexit 4
  fi
  cp studies/$newLHCDescrip/sixdeskenv .
  cp studies/$newLHCDescrip/sysenv .
fi
if test "$NEW" != "" -o "$UPDATE" != ""
then
  if test "$NEW" != ""
  then
    mymess 0 "Creating a NEW study $newLHCDescrip"
  else
    mymess 0 "Updating sixdeskenv/sysenv for $LHCDescrip"
  fi
  mkdir -p studies/$newLHCDescrip
  cp sixdeskenv studies/$newLHCDescrip
  cp sysenv studies/$newLHCDescrip
else
  if test "$SWITCH" = ""
  then
    mymess 0 "BUG!!! None of NEW/SWITCH/UPDATE is defined!!!"
    myunlock studies
    myunlock
    myexit 5
  fi
fi
# and in all case we now do a dot_env which should
# create and check everything as it will NOT see a switch
# even if it sees $1 again
# and unlock studies for dot_env
myunlock studies
. ./dot_env 
# Now clear the deleted flag (if set)
if test -e "$sixdeskstudy"/deleted
then
  rm "$sixdeskstudy"/deleted
fi
myunlock
myexit 0
